[
{
	"uri": "https://example.com/golang/",
	"title": "Getting started with GoLang",
	"tags": [],
	"description": "",
	"content": "Get started with Ace docs, the easy way to generate a static website for your project\u0026rsquo;s documentation. Installation and configuration is easy and can be easily applied to any project. No need to be dependent on Python, Ruby or Java. Hugo runs from a simple binary and works through the command line. Explore the following pages to learn how to build awesome documentation for your project using Ace.\nInstallation   Usage   Java 8 new Features    "
},
{
	"uri": "https://example.com/shortcodes/alerts/",
	"title": "Alerts",
	"tags": [],
	"description": "",
	"content": "The alerts shortcode allows you to let information stand out by means of an alert styled box. This can be used to indicate danger, warning, success or info.\n I\u0026rsquo;m a danger alert  I\u0026rsquo;m a warning alert  I\u0026rsquo;m a success alert  I\u0026rsquo;m an info alert  Usage Place the following shortcode on the page Copy   {{\u0026lt; alert style=\u0026#34;STYLE\u0026#34; \u0026gt;}} [content] {{\u0026lt; /alert \u0026gt;}}    Parameters Style The style parameter is directly applied to the alert as a class in the format \u0026ldquo;alert-{STYLE}\u0026quot;. Bootstrap comes with four styles that can be used with this:\n danger warning success info  "
},
{
	"uri": "https://example.com/golang/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "Installing Ace is easy. Just install the Hugo binary, create a new site and install the Ace theme. Installing Hugo In order to run this theme, you need to install Hugo on your system. This theme requires Hugo\u0026rsquo;s extended version to support SCSS compilation, so make please sure you install the extended version. For more detailed information and other methods of installation you can visit the Hugo installation guide.\nThere may be other ways to install Hugo that are more applicable for your project. For example, you can use the NPM package hugo-bin to include Hugo in a project that already uses NPM packages.\nChecking your Hugo installation Run the following command in your terminal to check if Hugo is installed. Copy   hugo version    Make sure the version name mentions extended, to indicate you\u0026rsquo;ve installed the extended version of Hugo, which is required for this theme.\nCreating a site Create a new site docs (you may choose any name you want). In your projects root folder, run the following command: Copy   hugo new site docs    This will create a new folder /docs with all required files in it.\nInstalling the theme Download and copy the theme files into /docs/themes/ace-documentation or use git to clone the repository to that directory: Copy   cd docs cd themes git clone https://github.com/vantagedesign/ace-documentation    After theme installation, the /docs/themes/ace-documentation folder should contain the file theme.toml, along with all other theme files.\nConfiguring your hugo site to use the theme Inside your site\u0026rsquo;s folder, /docs, you will find a file called config.toml. This is the configuration file for your site. Open it and configure it to use the Ace theme by setting the following value: Copy   theme = \u0026#34;ace-documentation\u0026#34;    Installing example content You can add some sample content to your site by placing the contents of the exampleSite directory in your /docs directory.\n"
},
{
	"uri": "https://example.com/configuration/buttons/",
	"title": "Buttons",
	"tags": [],
	"description": "",
	"content": "The button shortcode allows you to add a button to the page. This button is a HTML anchor element and can thus be used to link to another page or website.\n Button  Button  Button  Button  Button  Button  Button  Usage Place the following shortcode on the page Copy   {{\u0026lt; button style=\u0026#34;STYLE\u0026#34; link=\u0026#34;https://yourwebsite.com\u0026#34; \u0026gt;}} [content] {{\u0026lt; /button \u0026gt;}}    Parameters style The style parameter is directly applied to the alert as a class in the format \u0026ldquo;btn-{STYLE}\u0026quot;. Bootstrap comes with a variety of styles that can be used with this:\n primary secondary danger warning success info  Each style can also be presented as an \u0026lsquo;outline\u0026rsquo; variant by prefixing the style with \u0026lsquo;outline-'.\nExample: style=\u0026quot;outline-primary\u0026quot;.\nlink The link parameter may consist of an URL leading to a page or other website. Simply use it by defining a URL for the button to link to.\nExample: link=\u0026quot;https://google.com\u0026quot;.\n"
},
{
	"uri": "https://example.com/shortcodes/buttons/",
	"title": "Buttons",
	"tags": [],
	"description": "",
	"content": "The button shortcode allows you to add a button to the page. This button is a HTML anchor element and can thus be used to link to another page or website.\n Button  Button  Button  Button  Button  Button  Button  Usage Place the following shortcode on the page Copy   {{\u0026lt; button style=\u0026#34;STYLE\u0026#34; link=\u0026#34;https://yourwebsite.com\u0026#34; \u0026gt;}} [content] {{\u0026lt; /button \u0026gt;}}    Parameters style The style parameter is directly applied to the alert as a class in the format \u0026ldquo;btn-{STYLE}\u0026quot;. Bootstrap comes with a variety of styles that can be used with this:\n primary secondary danger warning success info  Each style can also be presented as an \u0026lsquo;outline\u0026rsquo; variant by prefixing the style with \u0026lsquo;outline-'.\nExample: style=\u0026quot;outline-primary\u0026quot;.\nlink The link parameter may consist of an URL leading to a page or other website. Simply use it by defining a URL for the button to link to.\nExample: link=\u0026quot;https://google.com\u0026quot;.\n"
},
{
	"uri": "https://example.com/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": "Customize and tweak Ace using a number of configuration options. Page ordering By default, pages are sorted on the weight assigned to them in their frontmatter. This is set in config.toml, using orderSectionsby = \u0026ldquo;weight\u0026quot;. Change this to \u0026quot;title\u0026quot; to sort pages alphabetically based on their title instead. Alternatively, do not assign a weight to any pages and it will also sort them alphabetically on their title.\nTable of contents By default, a table of contents (ToC) is generated for each page in the right side menu. This can be disabled using:\nCopy   \" data-lang=\"\" toc = false    in the config.toml or the frontmatter (a page\u0026rsquo;s markdown file) for a page-wide or page-specific disabling of the ToC respectively.\nGoogle Analytics Enable Google Analytics by adding your GA tracking ID to the config.toml file, at: Copy   \" data-lang=\"\" googleAnalytics = \u0026quot;XX-XXXXXXXXX-X\u0026quot;    Where XX-XXXXXXXXX-X is your tracking ID.\nRead more navigation In config.toml or a page\u0026rsquo;s frontmatter, set disableReadmoreNav = true to disable the prev/next buttons at the buttom of every page.\nSearch Disable search by setting disableSearch = true in config.toml.\n"
},
{
	"uri": "https://example.com/golang/usage/",
	"title": "Usage",
	"tags": [],
	"description": "",
	"content": "With the site created and the theme installed, it\u0026rsquo;s time to run the server and create content. Starting \u0026amp; building the site Development server To start the site for development mode, execute the following command while in your /docs folder: Copy   hugo server    This will start a server on your localhost that will live-update with any changes you make to your site.\nFor more Hugo commands visit https://gohugo.io/commands/\nBuilding for production To build the site for your production environment, as in, to serve it to your users through a web server, execute the following command. This will create a folder /docs/public with all the necessary files, compiled to HTML.\n\nBe sure the site\u0026rsquo;s configuration in config.toml is complete, including the baseURL = \u0026ldquo;https://yourdomain.com/\u0026ldquo; value to properly load stylesheets and other resources. Copy   hugo    Creating content Markdown Pages are written in Markdown and files defining pages should end with .md. For more information on how to use Markdown, search for tutorials on the internet or use this cheatsheet.\nFile structure Ace looks at your file stucture and automatically turns it into a menu. The structure looks as follows: Copy   \" data-lang=\"\" /content ├── _index.md ├── page-top.md └── /level-one ├── _index.md ├── page-1-one.md ├── page-1-two.md └── /level-two ├── _index.md ├── page-2-one.md ├── page-2-two.md └── /level-three ├── _index.md ├── page-3-one.md ├── page-3-two.md └── /level-four ├── page-4-one.md └── page-4-two.md    Your \u0026lsquo;homepage\u0026rsquo; for every level is the _index.md file. Subpages (like page-1-one.md) are automatically added as child pages in the menu.\nAn exception exists for the top level files. /content/_index.md is your homepage, and any other page files in the /content folder are not automatically added in the menu. Instead, they can be accessed manually through their URL (yourdomain.com/page-title).\nFile contents Every file should start by defining the title and weight of the page. This can be done by adding the following text to the top of your page file. Copy   +++ title = \u0026#34;Usage\u0026#34; description = \u0026#34;\u0026#34; weight = 2 +++    The title will be displayed as a H1 header at the top of your page. The weight determines the order in the menu.\nAfter that you may write the content you desire with Markdown. You may use shortcodes to add some more \u0026lsquo;advanced\u0026rsquo; layout features to the page, such as code hightlighting, a \u0026lsquo;lead\u0026rsquo; style paragraph, images, video\u0026rsquo;s, and more.\nNavigation bar menu While the left sidebar navigation is automatically populated by the file structure described above, and the right \u0026lsquo;table of contents\u0026rsquo; sidebar menu is automatically populated by the headings defined on a page, the top navigation bar needs to be configured manually. This can be done in the config.toml file, by adding the following lines: Copy   [[menu.shortcuts]] name = \u0026#34;\u0026lt;i class=\u0026#39;fab fa-github\u0026#39;\u0026gt;\u0026lt;/i\u0026gt;\u0026#34; url = \u0026#34;https://github.com/vantagedesign/ace-documentation\u0026#34; weight = 10    This example will create a GitHub icon that links to that URL. Instead of an icon, you may also use text, or both.\n"
},
{
	"uri": "https://example.com/shortcodes/childpages/",
	"title": "Childpages",
	"tags": [],
	"description": "",
	"content": "The childpages shortcode allows you to show a list of sub-pages of the current page. For example, the Getting started page of this documentation has three child pages: Installation, Configuration and Creating content. Placing the childpages shortcode in the Getting started page will place a create a list of these sub-pages in that page.\nUsage Simply place the following shortcode on the page Copy   {{\u0026lt; childpages \u0026gt;}}    "
},
{
	"uri": "https://example.com/shortcodes/",
	"title": "Shortcodes",
	"tags": [],
	"description": "",
	"content": "Shortcodes are a great way to add some more advanced elements to your page. Code highlighting, a \u0026lsquo;lead\u0026rsquo; style paragraph, images, videos, and more. Alerts   Buttons   Childpages   Code   Collapse   Doublecode   Lead   Panel   Table    "
},
{
	"uri": "https://example.com/shortcodes/code/",
	"title": "Code",
	"tags": [],
	"description": "",
	"content": "Add code to your page with syntax highlighting and a copy button so your users can easily copy the code to their clipboard with the press of a button. The code may be entered inside the shortcode or come from an external file.\nCopy   \u0026lt;div class=\u0026#34;mydiv bg-primary shadow text-white\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;title\u0026#34;\u0026gt;Hi there\u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34;\u0026gt;I\u0026#39;m inside a code shortcode. Check out my syntax highlighting!.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;    Usage Simply place the following shortcode on the page\nCode in the shortcode Copy   {{\u0026lt; code lang=\u0026#34;LANG\u0026#34; \u0026gt;}} [your code] {{\u0026lt; /code \u0026gt;}}    Code from a file Copy   {{\u0026lt; code lang=\u0026#34;LANG\u0026#34; file=\u0026#34;code/mycode.html\u0026#34; \u0026gt;}}    Parameters lang The lang parameter defines the language to be used for code highlighting. You can find a complete list of supported languages here.\nExample: lang=\u0026quot;html\u0026quot;\nfile The file parameter allows you to define an external file that contains your code to be displayed. This is done by giving a path to that file, starting from the root directory of your site. For example, a HTML file named \u0026lsquo;mycode.html\u0026rsquo; you wish to link that is in the docs/code/ directory can be defined as follows: file=\u0026quot;code/mycode.html\u0026quot;.\n"
},
{
	"uri": "https://example.com/posts/emoji-support-copy/",
	"title": "Emoji Support",
	"tags": ["emoji"],
	"description": "Guide to emoji usage in Hugo and LoveIt.",
	"content": "Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files.\nThese begin and end with a colon and include the code of an emoji:\nGone camping! {?:}tent: Be back soon. That is so funny! {?:}joy: The rendered output looks like this:\nGone camping! :tent: Be back soon.\nThat is so funny! :joy:\nThe following cheat sheet is a useful reference for emoji shorthand codes.\nSmileys \u0026amp; Emotion Face Smiling    icon code icon code     :grinning: grinning :smiley: smiley   :smile: smile :grin: grin   :laughing: laughing satisfied :sweat_smile: sweat_smile   :rofl: rofl :joy: joy   :slightly_smiling_face: slightly_smiling_face :upside_down_face: upside_down_face   :wink: wink :blush: blush   :innocent: innocent      Face Affection    icon code icon code     :heart_eyes: heart_eyes :kissing_heart: kissing_heart   :kissing: kissing :relaxed: relaxed   :kissing_closed_eyes: kissing_closed_eyes :kissing_smiling_eyes: kissing_smiling_eyes    Face Tongue    icon code icon code     :yum: yum :stuck_out_tongue: stuck_out_tongue   :stuck_out_tongue_winking_eye: stuck_out_tongue_winking_eye :stuck_out_tongue_closed_eyes: stuck_out_tongue_closed_eyes   :money_mouth_face: money_mouth_face      Face Hand    icon code icon code     :hugs: hugs :thinking: thinking    Face Neutral Skeptical    icon code icon code     :zipper_mouth_face: zipper_mouth_face :neutral_face: neutral_face   :expressionless: expressionless :no_mouth: no_mouth   :smirk: smirk :unamused: unamused   :roll_eyes: roll_eyes :grimacing: grimacing   :lying_face: lying_face      Face Sleepy    icon code icon code     :relieved: relieved :pensive: pensive   :sleepy: sleepy :drooling_face: drooling_face   :sleeping: sleeping      Face Unwell    icon code icon code     :mask: mask :face_with_thermometer: face_with_thermometer   :face_with_head_bandage: face_with_head_bandage :nauseated_face: nauseated_face   :sneezing_face: sneezing_face :dizzy_face: dizzy_face    Face Hat    icon code icon code     :cowboy_hat_face: cowboy_hat_face      Face Glasses    icon code icon code     :sunglasses: sunglasses :nerd_face: nerd_face    Face Concerned    icon code icon code     :confused: confused :worried: worried   :slightly_frowning_face: slightly_frowning_face :frowning_face: frowning_face   :open_mouth: open_mouth :hushed: hushed   :astonished: astonished :flushed: flushed   :frowning: frowning :anguished: anguished   :fearful: fearful :cold_sweat: cold_sweat   :disappointed_relieved: disappointed_relieved :cry: cry   :sob: sob :scream: scream   :confounded: confounded :persevere: persevere   :disappointed: disappointed :sweat: sweat   :weary: weary :tired_face: tired_face    Face Negative    icon code icon code     :triumph: triumph :pout: pout rage   :angry: angry :smiling_imp: smiling_imp   :imp: imp :skull: skull   :skull_and_crossbones: skull_and_crossbones      Face Costume    icon code icon code     :hankey: hankey poop shit :clown_face: clown_face   :japanese_ogre: japanese_ogre :japanese_goblin: japanese_goblin   :ghost: ghost :alien: alien   :space_invader: space_invader :robot: robot    Cat Face    icon code icon code     :smiley_cat: smiley_cat :smile_cat: smile_cat   :joy_cat: joy_cat :heart_eyes_cat: heart_eyes_cat   :smirk_cat: smirk_cat :kissing_cat: kissing_cat   :scream_cat: scream_cat :crying_cat_face: crying_cat_face   :pouting_cat: pouting_cat      Monkey Face    icon code icon code     :see_no_evil: see_no_evil :hear_no_evil: hear_no_evil   :speak_no_evil: speak_no_evil      Emotion    icon code icon code     :kiss: kiss :love_letter: love_letter   :cupid: cupid :gift_heart: gift_heart   :sparkling_heart: sparkling_heart :heartpulse: heartpulse   :heartbeat: heartbeat :revolving_hearts: revolving_hearts   :two_hearts: two_hearts :heart_decoration: heart_decoration   :heavy_heart_exclamation: heavy_heart_exclamation :broken_heart: broken_heart   :heart: heart :yellow_heart: yellow_heart   :green_heart: green_heart :blue_heart: blue_heart   :purple_heart: purple_heart :black_heart: black_heart   :100: 100 :anger: anger   :boom: boom collision :dizzy: dizzy   :sweat_drops: sweat_drops :dash: dash   :hole: hole :bomb: bomb   :speech_balloon: speech_balloon :eye_speech_bubble: eye_speech_bubble   :right_anger_bubble: right_anger_bubble :thought_balloon: thought_balloon   :zzz: zzz      People \u0026amp; Body Hand Fingers Open    icon code icon code     :wave: wave :raised_back_of_hand: raised_back_of_hand   :raised_hand_with_fingers_splayed: raised_hand_with_fingers_splayed :hand: hand raised_hand   :vulcan_salute: vulcan_salute      Hand Fingers Partial    icon code icon code     :ok_hand: ok_hand :v: v   :crossed_fingers: crossed_fingers :metal: metal   :call_me_hand: call_me_hand      Hand Single Finger    icon code icon code     :point_left: point_left :point_right: point_right   :point_up_2: point_up_2 :fu: fu middle_finger   :point_down: point_down :point_up: point_up    Hand Fingers Closed    icon code icon code     :+1: +1 thumbsup :-1: -1 thumbsdown   :fist: fist fist_raised :facepunch: facepunch fist_oncoming punch   :fist_left: fist_left :fist_right: fist_right    Hands    icon code icon code     :clap: clap :raised_hands: raised_hands   :open_hands: open_hands :handshake: handshake   :pray: pray      Hand Prop    icon code icon code     :writing_hand: writing_hand :nail_care: nail_care   :selfie: selfie      Body Parts    icon code icon code     :muscle: muscle :ear: ear   :nose: nose :eyes: eyes   :eye: eye :tongue: tongue   :lips: lips      Person    icon code icon code     :baby: baby :boy: boy   :girl: girl :blonde_man: blonde_man person_with_blond_hair   :man: man :woman: woman   :blonde_woman: blonde_woman :older_man: older_man   :older_woman: older_woman      Person Gesture    icon code icon code     :frowning_woman: frowning_woman person_frowning :frowning_man: frowning_man   :person_with_pouting_face: person_with_pouting_face pouting_woman :pouting_man: pouting_man   :ng_woman: ng_woman no_good no_good_woman :ng_man: ng_man no_good_man   :ok_woman: ok_woman :ok_man: ok_man   :information_desk_person: information_desk_person sassy_woman tipping_hand_woman :sassy_man: sassy_man tipping_hand_man   :raising_hand: raising_hand raising_hand_woman :raising_hand_man: raising_hand_man   :bow: bow bowing_man :bowing_woman: bowing_woman   :man_facepalming: man_facepalming :woman_facepalming: woman_facepalming   :man_shrugging: man_shrugging :woman_shrugging: woman_shrugging    Person Role    icon code icon code     :man_health_worker: man_health_worker :woman_health_worker: woman_health_worker   :man_student: man_student :woman_student: woman_student   :man_teacher: man_teacher :woman_teacher: woman_teacher   :man_judge: man_judge :woman_judge: woman_judge   :man_farmer: man_farmer :woman_farmer: woman_farmer   :man_cook: man_cook :woman_cook: woman_cook   :man_mechanic: man_mechanic :woman_mechanic: woman_mechanic   :man_factory_worker: man_factory_worker :woman_factory_worker: woman_factory_worker   :man_office_worker: man_office_worker :woman_office_worker: woman_office_worker   :man_scientist: man_scientist :woman_scientist: woman_scientist   :man_technologist: man_technologist :woman_technologist: woman_technologist   :man_singer: man_singer :woman_singer: woman_singer   :man_artist: man_artist :woman_artist: woman_artist   :man_pilot: man_pilot :woman_pilot: woman_pilot   :man_astronaut: man_astronaut :woman_astronaut: woman_astronaut   :man_firefighter: man_firefighter :woman_firefighter: woman_firefighter   :cop: cop policeman :policewoman: policewoman   :detective: detective male_detective :female_detective: female_detective   :guardsman: guardsman :guardswoman: guardswoman   :construction_worker: construction_worker construction_worker_man :construction_worker_woman: construction_worker_woman   :prince: prince :princess: princess   :man_with_turban: man_with_turban :woman_with_turban: woman_with_turban   :man_with_gua_pi_mao: man_with_gua_pi_mao :man_in_tuxedo: man_in_tuxedo   :bride_with_veil: bride_with_veil :pregnant_woman: pregnant_woman    Person Fantasy    icon code icon code     :angel: angel :santa: santa   :mrs_claus: mrs_claus      Person Activity    icon code icon code     :massage: massage massage_woman :massage_man: massage_man   :haircut: haircut haircut_woman :haircut_man: haircut_man   :walking: walking walking_man :walking_woman: walking_woman   :runner: runner running running_man :running_woman: running_woman   :dancer: dancer :man_dancing: man_dancing   :business_suit_levitating: business_suit_levitating :dancers: dancers dancing_women   :dancing_men: dancing_men      Person Sport    icon code icon code     :person_fencing: person_fencing :horse_racing: horse_racing   :skier: skier :snowboarder: snowboarder   :golfing_man: golfing_man :golfing_woman: golfing_woman   :surfer: surfer surfing_man :surfing_woman: surfing_woman   :rowboat: rowboat rowing_man :rowing_woman: rowing_woman   :swimmer: swimmer swimming_man :swimming_woman: swimming_woman   :basketball_man: basketball_man :basketball_woman: basketball_woman   :weight_lifting_man: weight_lifting_man :weight_lifting_woman: weight_lifting_woman   :bicyclist: bicyclist biking_man :biking_woman: biking_woman   :mountain_bicyclist: mountain_bicyclist mountain_biking_man :mountain_biking_woman: mountain_biking_woman   :man_cartwheeling: man_cartwheeling :woman_cartwheeling: woman_cartwheeling   :men_wrestling: men_wrestling :women_wrestling: women_wrestling   :man_playing_water_polo: man_playing_water_polo :woman_playing_water_polo: woman_playing_water_polo   :man_playing_handball: man_playing_handball :woman_playing_handball: woman_playing_handball   :man_juggling: man_juggling :woman_juggling: woman_juggling    Person Resting    icon code icon code     :bath: bath :sleeping_bed: sleeping_bed    Family    icon code icon code     :two_women_holding_hands: two_women_holding_hands :couple: couple   :two_men_holding_hands: two_men_holding_hands :couplekiss_man_woman: couplekiss_man_woman   :couplekiss_man_man: couplekiss_man_man :couplekiss_woman_woman: couplekiss_woman_woman   :couple_with_heart: couple_with_heart couple_with_heart_woman_man :couple_with_heart_man_man: couple_with_heart_man_man   :couple_with_heart_woman_woman: couple_with_heart_woman_woman :family: family family_man_woman_boy   :family_man_woman_girl: family_man_woman_girl :family_man_woman_girl_boy: family_man_woman_girl_boy   :family_man_woman_boy_boy: family_man_woman_boy_boy :family_man_woman_girl_girl: family_man_woman_girl_girl   :family_man_man_boy: family_man_man_boy :family_man_man_girl: family_man_man_girl   :family_man_man_girl_boy: family_man_man_girl_boy :family_man_man_boy_boy: family_man_man_boy_boy   :family_man_man_girl_girl: family_man_man_girl_girl :family_woman_woman_boy: family_woman_woman_boy   :family_woman_woman_girl: family_woman_woman_girl :family_woman_woman_girl_boy: family_woman_woman_girl_boy   :family_woman_woman_boy_boy: family_woman_woman_boy_boy :family_woman_woman_girl_girl: family_woman_woman_girl_girl   :family_man_boy: family_man_boy :family_man_boy_boy: family_man_boy_boy   :family_man_girl: family_man_girl :family_man_girl_boy: family_man_girl_boy   :family_man_girl_girl: family_man_girl_girl :family_woman_boy: family_woman_boy   :family_woman_boy_boy: family_woman_boy_boy :family_woman_girl: family_woman_girl   :family_woman_girl_boy: family_woman_girl_boy :family_woman_girl_girl: family_woman_girl_girl    Person Symbol    icon code icon code     :speaking_head: speaking_head :bust_in_silhouette: bust_in_silhouette   :busts_in_silhouette: busts_in_silhouette :footprints: footprints    Animals \u0026amp; Nature Animal Mammal    icon code icon code     :monkey_face: monkey_face :monkey: monkey   :gorilla: gorilla :dog: dog   :dog2: dog2 :poodle: poodle   :wolf: wolf :fox_face: fox_face   :cat: cat :cat2: cat2   :lion: lion :tiger: tiger   :tiger2: tiger2 :leopard: leopard   :horse: horse :racehorse: racehorse   :unicorn: unicorn :deer: deer   :cow: cow :ox: ox   :water_buffalo: water_buffalo :cow2: cow2   :pig: pig :pig2: pig2   :boar: boar :pig_nose: pig_nose   :ram: ram :sheep: sheep   :goat: goat :dromedary_camel: dromedary_camel   :camel: camel :elephant: elephant   :rhinoceros: rhinoceros :mouse: mouse   :mouse2: mouse2 :rat: rat   :hamster: hamster :rabbit: rabbit   :rabbit2: rabbit2 :chipmunk: chipmunk   :bat: bat :bear: bear   :koala: koala :panda_face: panda_face   :feet: feet paw_prints      Animal Bird    icon code icon code     :turkey: turkey :chicken: chicken   :rooster: rooster :hatching_chick: hatching_chick   :baby_chick: baby_chick :hatched_chick: hatched_chick   :bird: bird :penguin: penguin   :dove: dove :eagle: eagle   :duck: duck :owl: owl    Animal Amphibian    icon code icon code     :frog: frog      Animal Reptile    icon code icon code     :crocodile: crocodile :turtle: turtle   :lizard: lizard :snake: snake   :dragon_face: dragon_face :dragon: dragon    Animal Marine    icon code icon code     :whale: whale :whale2: whale2   :dolphin: dolphin flipper :fish: fish   :tropical_fish: tropical_fish :blowfish: blowfish   :shark: shark :octopus: octopus   :shell: shell      Animal Bug    icon code icon code     :snail: snail :butterfly: butterfly   :bug: bug :ant: ant   :bee: bee honeybee :beetle: beetle   :spider: spider :spider_web: spider_web   :scorpion: scorpion      Plant Flower    icon code icon code     :bouquet: bouquet :cherry_blossom: cherry_blossom   :white_flower: white_flower :rosette: rosette   :rose: rose :wilted_flower: wilted_flower   :hibiscus: hibiscus :sunflower: sunflower   :blossom: blossom :tulip: tulip    Plant Other    icon code icon code     :seedling: seedling :evergreen_tree: evergreen_tree   :deciduous_tree: deciduous_tree :palm_tree: palm_tree   :cactus: cactus :ear_of_rice: ear_of_rice   :herb: herb :shamrock: shamrock   :four_leaf_clover: four_leaf_clover :maple_leaf: maple_leaf   :fallen_leaf: fallen_leaf :leaves: leaves    Food \u0026amp; Drink Food Fruit    icon code icon code     :grapes: grapes :melon: melon   :watermelon: watermelon :mandarin: mandarin orange tangerine   :lemon: lemon :banana: banana   :pineapple: pineapple :apple: apple   :green_apple: green_apple :pear: pear   :peach: peach :cherries: cherries   :strawberry: strawberry :kiwi_fruit: kiwi_fruit   :tomato: tomato      Food Vegetable    icon code icon code     :avocado: avocado :eggplant: eggplant   :potato: potato :carrot: carrot   :corn: corn :hot_pepper: hot_pepper   :cucumber: cucumber :mushroom: mushroom   :peanuts: peanuts :chestnut: chestnut    Food Prepared    icon code icon code     :bread: bread :croissant: croissant   :baguette_bread: baguette_bread :pancakes: pancakes   :cheese: cheese :meat_on_bone: meat_on_bone   :poultry_leg: poultry_leg :bacon: bacon   :hamburger: hamburger :fries: fries   :pizza: pizza :hotdog: hotdog   :taco: taco :burrito: burrito   :stuffed_flatbread: stuffed_flatbread :egg: egg   :fried_egg: fried_egg :shallow_pan_of_food: shallow_pan_of_food   :stew: stew :green_salad: green_salad   :popcorn: popcorn      Food Asian    icon code icon code     :bento: bento :rice_cracker: rice_cracker   :rice_ball: rice_ball :rice: rice   :curry: curry :ramen: ramen   :spaghetti: spaghetti :sweet_potato: sweet_potato   :oden: oden :sushi: sushi   :fried_shrimp: fried_shrimp :fish_cake: fish_cake   :dango: dango      Food Marine    icon code icon code     :crab: crab :shrimp: shrimp   :squid: squid      Food Sweet    icon code icon code     :icecream: icecream :shaved_ice: shaved_ice   :ice_cream: ice_cream :doughnut: doughnut   :cookie: cookie :birthday: birthday   :cake: cake :chocolate_bar: chocolate_bar   :candy: candy :lollipop: lollipop   :custard: custard :honey_pot: honey_pot    Drink    icon code icon code     :baby_bottle: baby_bottle :milk_glass: milk_glass   :coffee: coffee :tea: tea   :sake: sake :champagne: champagne   :wine_glass: wine_glass :cocktail: cocktail   :tropical_drink: tropical_drink :beer: beer   :beers: beers :clinking_glasses: clinking_glasses   :tumbler_glass: tumbler_glass      Dishware    icon code icon code     :plate_with_cutlery: plate_with_cutlery :fork_and_knife: fork_and_knife   :spoon: spoon :hocho: hocho knife   :amphora: amphora      Travel \u0026amp; Places Place Map    icon code icon code     :earth_africa: earth_africa :earth_americas: earth_americas   :earth_asia: earth_asia :globe_with_meridians: globe_with_meridians   :world_map: world_map :japan: japan    Place Geographic    icon code icon code     :mountain_snow: mountain_snow :mountain: mountain   :volcano: volcano :mount_fuji: mount_fuji   :camping: camping :beach_umbrella: beach_umbrella   :desert: desert :desert_island: desert_island   :national_park: national_park      Place Building    icon code icon code     :stadium: stadium :classical_building: classical_building   :building_construction: building_construction :houses: houses   :derelict_house: derelict_house :house: house   :house_with_garden: house_with_garden :office: office   :post_office: post_office :european_post_office: european_post_office   :hospital: hospital :bank: bank   :hotel: hotel :love_hotel: love_hotel   :convenience_store: convenience_store :school: school   :department_store: department_store :factory: factory   :japanese_castle: japanese_castle :european_castle: european_castle   :wedding: wedding :tokyo_tower: tokyo_tower   :statue_of_liberty: statue_of_liberty      Place Religious    icon code icon code     :church: church :mosque: mosque   :synagogue: synagogue :shinto_shrine: shinto_shrine   :kaaba: kaaba      Place Other    icon code icon code     :fountain: fountain :tent: tent   :foggy: foggy :night_with_stars: night_with_stars   :cityscape: cityscape :sunrise_over_mountains: sunrise_over_mountains   :sunrise: sunrise :city_sunset: city_sunset   :city_sunrise: city_sunrise :bridge_at_night: bridge_at_night   :hotsprings: hotsprings :carousel_horse: carousel_horse   :ferris_wheel: ferris_wheel :roller_coaster: roller_coaster   :barber: barber :circus_tent: circus_tent    Transport Ground    icon code icon code     :steam_locomotive: steam_locomotive :railway_car: railway_car   :bullettrain_side: bullettrain_side :bullettrain_front: bullettrain_front   :train2: train2 :metro: metro   :light_rail: light_rail :station: station   :tram: tram :monorail: monorail   :mountain_railway: mountain_railway :train: train   :bus: bus :oncoming_bus: oncoming_bus   :trolleybus: trolleybus :minibus: minibus   :ambulance: ambulance :fire_engine: fire_engine   :police_car: police_car :oncoming_police_car: oncoming_police_car   :taxi: taxi :oncoming_taxi: oncoming_taxi   :car: car red_car :oncoming_automobile: oncoming_automobile   :blue_car: blue_car :truck: truck   :articulated_lorry: articulated_lorry :tractor: tractor   :racing_car: racing_car :motorcycle: motorcycle   :motor_scooter: motor_scooter :bike: bike   :kick_scooter: kick_scooter :busstop: busstop   :motorway: motorway :railway_track: railway_track   :oil_drum: oil_drum :fuelpump: fuelpump   :rotating_light: rotating_light :traffic_light: traffic_light   :vertical_traffic_light: vertical_traffic_light :stop_sign: stop_sign   :construction: construction      Transport Water    icon code icon code     :anchor: anchor :boat: boat sailboat   :canoe: canoe :speedboat: speedboat   :passenger_ship: passenger_ship :ferry: ferry   :motor_boat: motor_boat :ship: ship    Transport Air    icon code icon code     :airplane: airplane :small_airplane: small_airplane   :flight_departure: flight_departure :flight_arrival: flight_arrival   :seat: seat :helicopter: helicopter   :suspension_railway: suspension_railway :mountain_cableway: mountain_cableway   :aerial_tramway: aerial_tramway :artificial_satellite: artificial_satellite   :rocket: rocket      Hotel    icon code icon code     :bellhop_bell: bellhop_bell      Time    icon code icon code     :hourglass: hourglass :hourglass_flowing_sand: hourglass_flowing_sand   :watch: watch :alarm_clock: alarm_clock   :stopwatch: stopwatch :timer_clock: timer_clock   :mantelpiece_clock: mantelpiece_clock :clock12: clock12   :clock1230: clock1230 :clock1: clock1   :clock130: clock130 :clock2: clock2   :clock230: clock230 :clock3: clock3   :clock330: clock330 :clock4: clock4   :clock430: clock430 :clock5: clock5   :clock530: clock530 :clock6: clock6   :clock630: clock630 :clock7: clock7   :clock730: clock730 :clock8: clock8   :clock830: clock830 :clock9: clock9   :clock930: clock930 :clock10: clock10   :clock1030: clock1030 :clock11: clock11   :clock1130: clock1130      Sky \u0026amp; Weather    icon code icon code     :new_moon: new_moon :waxing_crescent_moon: waxing_crescent_moon   :first_quarter_moon: first_quarter_moon :moon: moon waxing_gibbous_moon   :full_moon: full_moon :waning_gibbous_moon: waning_gibbous_moon   :last_quarter_moon: last_quarter_moon :waning_crescent_moon: waning_crescent_moon   :crescent_moon: crescent_moon :new_moon_with_face: new_moon_with_face   :first_quarter_moon_with_face: first_quarter_moon_with_face :last_quarter_moon_with_face: last_quarter_moon_with_face   :thermometer: thermometer :sunny: sunny   :full_moon_with_face: full_moon_with_face :sun_with_face: sun_with_face   :star: star :star2: star2   :stars: stars :milky_way: milky_way   :cloud: cloud :partly_sunny: partly_sunny   :cloud_with_lightning_and_rain: cloud_with_lightning_and_rain :sun_behind_small_cloud: sun_behind_small_cloud   :sun_behind_large_cloud: sun_behind_large_cloud :sun_behind_rain_cloud: sun_behind_rain_cloud   :cloud_with_rain: cloud_with_rain :cloud_with_snow: cloud_with_snow   :cloud_with_lightning: cloud_with_lightning :tornado: tornado   :fog: fog :wind_face: wind_face   :cyclone: cyclone :rainbow: rainbow   :closed_umbrella: closed_umbrella :open_umbrella: open_umbrella   :umbrella: umbrella :parasol_on_ground: parasol_on_ground   :zap: zap :snowflake: snowflake   :snowman_with_snow: snowman_with_snow :snowman: snowman   :comet: comet :fire: fire   :droplet: droplet :ocean: ocean    Activities Event    icon code icon code     :jack_o_lantern: jack_o_lantern :christmas_tree: christmas_tree   :fireworks: fireworks :sparkler: sparkler   :sparkles: sparkles :balloon: balloon   :tada: tada :confetti_ball: confetti_ball   :tanabata_tree: tanabata_tree :bamboo: bamboo   :dolls: dolls :flags: flags   :wind_chime: wind_chime :rice_scene: rice_scene   :ribbon: ribbon :gift: gift   :reminder_ribbon: reminder_ribbon :tickets: tickets   :ticket: ticket      Award Medal    icon code icon code     :medal_military: medal_military :trophy: trophy   :medal_sports: medal_sports :1st_place_medal: 1st_place_medal   :2nd_place_medal: 2nd_place_medal :3rd_place_medal: 3rd_place_medal    Sport    icon code icon code     :soccer: soccer :baseball: baseball   :basketball: basketball :volleyball: volleyball   :football: football :rugby_football: rugby_football   :tennis: tennis :bowling: bowling   :cricket: cricket :field_hockey: field_hockey   :ice_hockey: ice_hockey :ping_pong: ping_pong   :badminton: badminton :boxing_glove: boxing_glove   :martial_arts_uniform: martial_arts_uniform :goal_net: goal_net   :golf: golf :ice_skate: ice_skate   :fishing_pole_and_fish: fishing_pole_and_fish :running_shirt_with_sash: running_shirt_with_sash   :ski: ski      Game    icon code icon code     :dart: dart :8ball: 8ball   :crystal_ball: crystal_ball :video_game: video_game   :joystick: joystick :slot_machine: slot_machine   :game_die: game_die :spades: spades   :hearts: hearts :diamonds: diamonds   :clubs: clubs :black_joker: black_joker   :mahjong: mahjong :flower_playing_cards: flower_playing_cards    Arts \u0026amp; Crafts    icon code icon code     :performing_arts: performing_arts :framed_picture: framed_picture   :art: art      Objects Clothing    icon code icon code     :eyeglasses: eyeglasses :dark_sunglasses: dark_sunglasses   :necktie: necktie :shirt: shirt tshirt   :jeans: jeans :dress: dress   :kimono: kimono :bikini: bikini   :womans_clothes: womans_clothes :purse: purse   :handbag: handbag :pouch: pouch   :shopping: shopping :school_satchel: school_satchel   :mans_shoe: mans_shoe shoe :athletic_shoe: athletic_shoe   :high_heel: high_heel :sandal: sandal   :boot: boot :crown: crown   :womans_hat: womans_hat :tophat: tophat   :mortar_board: mortar_board :rescue_worker_helmet: rescue_worker_helmet   :prayer_beads: prayer_beads :lipstick: lipstick   :ring: ring :gem: gem    Sound    icon code icon code     :mute: mute :speaker: speaker   :sound: sound :loud_sound: loud_sound   :loudspeaker: loudspeaker :mega: mega   :postal_horn: postal_horn :bell: bell   :no_bell: no_bell      Music    icon code icon code     :musical_score: musical_score :musical_note: musical_note   :notes: notes :studio_microphone: studio_microphone   :level_slider: level_slider :control_knobs: control_knobs   :microphone: microphone :headphones: headphones   :radio: radio      Musical Instrument    icon code icon code     :saxophone: saxophone :guitar: guitar   :musical_keyboard: musical_keyboard :trumpet: trumpet   :violin: violin :drum: drum    Phone    icon code icon code     :iphone: iphone :calling: calling   :phone: phone telephone :telephone_receiver: telephone_receiver   :pager: pager :fax: fax    Computer    icon code icon code     :battery: battery :electric_plug: electric_plug   :computer: computer :desktop_computer: desktop_computer   :printer: printer :keyboard: keyboard   :computer_mouse: computer_mouse :trackball: trackball   :minidisc: minidisc :floppy_disk: floppy_disk   :cd: cd :dvd: dvd    Light \u0026amp; Video    icon code icon code     :movie_camera: movie_camera :film_strip: film_strip   :film_projector: film_projector :clapper: clapper   :tv: tv :camera: camera   :camera_flash: camera_flash :video_camera: video_camera   :vhs: vhs :mag: mag   :mag_right: mag_right :candle: candle   :bulb: bulb :flashlight: flashlight   :izakaya_lantern: izakaya_lantern lantern      Book Paper    icon code icon code     :notebook_with_decorative_cover: notebook_with_decorative_cover :closed_book: closed_book   :book: book open_book :green_book: green_book   :blue_book: blue_book :orange_book: orange_book   :books: books :notebook: notebook   :ledger: ledger :page_with_curl: page_with_curl   :scroll: scroll :page_facing_up: page_facing_up   :newspaper: newspaper :newspaper_roll: newspaper_roll   :bookmark_tabs: bookmark_tabs :bookmark: bookmark   :label: label      Money    icon code icon code     :moneybag: moneybag :yen: yen   :dollar: dollar :euro: euro   :pound: pound :money_with_wings: money_with_wings   :credit_card: credit_card :chart: chart    Mail    icon code icon code     :email: email envelope :e-mail: :e-mail:   :incoming_envelope: incoming_envelope :envelope_with_arrow: envelope_with_arrow   :outbox_tray: outbox_tray :inbox_tray: inbox_tray   :package: package :mailbox: mailbox   :mailbox_closed: mailbox_closed :mailbox_with_mail: mailbox_with_mail   :mailbox_with_no_mail: mailbox_with_no_mail :postbox: postbox   :ballot_box: ballot_box      Writing    icon code icon code     :pencil2: pencil2 :black_nib: black_nib   :fountain_pen: fountain_pen :pen: pen   :paintbrush: paintbrush :crayon: crayon   :memo: memo pencil      Office    icon code icon code     :briefcase: briefcase :file_folder: file_folder   :open_file_folder: open_file_folder :card_index_dividers: card_index_dividers   :date: date :calendar: calendar   :spiral_notepad: spiral_notepad :spiral_calendar: spiral_calendar   :card_index: card_index :chart_with_upwards_trend: chart_with_upwards_trend   :chart_with_downwards_trend: chart_with_downwards_trend :bar_chart: bar_chart   :clipboard: clipboard :pushpin: pushpin   :round_pushpin: round_pushpin :paperclip: paperclip   :paperclips: paperclips :straight_ruler: straight_ruler   :triangular_ruler: triangular_ruler :scissors: scissors   :card_file_box: card_file_box :file_cabinet: file_cabinet   :wastebasket: wastebasket      Lock    icon code icon code     :lock: lock :unlock: unlock   :lock_with_ink_pen: lock_with_ink_pen :closed_lock_with_key: closed_lock_with_key   :key: key :old_key: old_key    Tool    icon code icon code     :hammer: hammer :pick: pick   :hammer_and_pick: hammer_and_pick :hammer_and_wrench: hammer_and_wrench   :dagger: dagger :crossed_swords: crossed_swords   :gun: gun :bow_and_arrow: bow_and_arrow   :shield: shield :wrench: wrench   :nut_and_bolt: nut_and_bolt :gear: gear   :clamp: clamp :balance_scale: balance_scale   :link: link :chains: chains    Science    icon code icon code     :alembic: alembic :microscope: microscope   :telescope: telescope :satellite: satellite    Medical    icon code icon code     :syringe: syringe :pill: pill    Household    icon code icon code     :door: door :bed: bed   :couch_and_lamp: couch_and_lamp :toilet: toilet   :shower: shower :bathtub: bathtub   :shopping_cart: shopping_cart      Other Object    icon code icon code     :smoking: smoking :coffin: coffin   :funeral_urn: funeral_urn :moyai: moyai    Symbols Transport Sign    icon code icon code     :atm: atm :put_litter_in_its_place: put_litter_in_its_place   :potable_water: potable_water :wheelchair: wheelchair   :mens: mens :womens: womens   :restroom: restroom :baby_symbol: baby_symbol   :wc: wc :passport_control: passport_control   :customs: customs :baggage_claim: baggage_claim   :left_luggage: left_luggage      Warning    icon code icon code     :warning: warning :children_crossing: children_crossing   :no_entry: no_entry :no_entry_sign: no_entry_sign   :no_bicycles: no_bicycles :no_smoking: no_smoking   :do_not_litter: do_not_litter :non-potable_water: :non-potable_water:   :no_pedestrians: no_pedestrians :no_mobile_phones: no_mobile_phones   :underage: underage :radioactive: radioactive   :biohazard: biohazard      Arrow    icon code icon code     :arrow_up: arrow_up :arrow_upper_right: arrow_upper_right   :arrow_right: arrow_right :arrow_lower_right: arrow_lower_right   :arrow_down: arrow_down :arrow_lower_left: arrow_lower_left   :arrow_left: arrow_left :arrow_upper_left: arrow_upper_left   :arrow_up_down: arrow_up_down :left_right_arrow: left_right_arrow   :leftwards_arrow_with_hook: leftwards_arrow_with_hook :arrow_right_hook: arrow_right_hook   :arrow_heading_up: arrow_heading_up :arrow_heading_down: arrow_heading_down   :arrows_clockwise: arrows_clockwise :arrows_counterclockwise: arrows_counterclockwise   :back: back :end: end   :on: on :soon: soon   :top: top      Religion    icon code icon code     :place_of_worship: place_of_worship :atom_symbol: atom_symbol   :om: om :star_of_david: star_of_david   :wheel_of_dharma: wheel_of_dharma :yin_yang: yin_yang   :latin_cross: latin_cross :orthodox_cross: orthodox_cross   :star_and_crescent: star_and_crescent :peace_symbol: peace_symbol   :menorah: menorah :six_pointed_star: six_pointed_star    Zodiac    icon code icon code     :aries: aries :taurus: taurus   :gemini: gemini :cancer: cancer   :leo: leo :virgo: virgo   :libra: libra :scorpius: scorpius   :sagittarius: sagittarius :capricorn: capricorn   :aquarius: aquarius :pisces: pisces   :ophiuchus: ophiuchus      Av Symbol    icon code icon code     :twisted_rightwards_arrows: twisted_rightwards_arrows :repeat: repeat   :repeat_one: repeat_one :arrow_forward: arrow_forward   :fast_forward: fast_forward :next_track_button: next_track_button   :play_or_pause_button: play_or_pause_button :arrow_backward: arrow_backward   :rewind: rewind :previous_track_button: previous_track_button   :arrow_up_small: arrow_up_small :arrow_double_up: arrow_double_up   :arrow_down_small: arrow_down_small :arrow_double_down: arrow_double_down   :pause_button: pause_button :stop_button: stop_button   :record_button: record_button :cinema: cinema   :low_brightness: low_brightness :high_brightness: high_brightness   :signal_strength: signal_strength :vibration_mode: vibration_mode   :mobile_phone_off: mobile_phone_off      Math    icon code icon code     :heavy_multiplication_x: heavy_multiplication_x :heavy_plus_sign: heavy_plus_sign   :heavy_minus_sign: heavy_minus_sign :heavy_division_sign: heavy_division_sign    Punctuation    icon code icon code     :bangbang: bangbang :interrobang: interrobang   :question: question :grey_question: grey_question   :grey_exclamation: grey_exclamation :exclamation: exclamation heavy_exclamation_mark   :wavy_dash: wavy_dash      Currency    icon code icon code     :currency_exchange: currency_exchange :heavy_dollar_sign: heavy_dollar_sign    Keycap    icon code icon code     :hash: hash :asterisk: asterisk   :zero: zero :one: one   :two: two :three: three   :four: four :five: five   :six: six :seven: seven   :eight: eight :nine: nine   :keycap_ten: keycap_ten      Alphabet    icon code icon code     :capital_abcd: capital_abcd :abcd: abcd   :1234: 1234 :symbols: symbols   :abc: abc :a: a   :ab: ab :b: b   :cl: cl :cool: cool   :free: free :information_source: information_source   :id: id :m: m   :new: new :ng: ng   :o2: o2 :ok: ok   :parking: parking :sos: sos   :up: up :vs: vs   :koko: koko :sa: sa   :u6708: u6708 :u6709: u6709   :u6307: u6307 :ideograph_advantage: ideograph_advantage   :u5272: u5272 :u7121: u7121   :u7981: u7981 :accept: accept   :u7533: u7533 :u5408: u5408   :u7a7a: u7a7a :congratulations: congratulations   :secret: secret :u55b6: u55b6   :u6e80: u6e80      Geometric    icon code icon code     :red_circle: red_circle :large_blue_circle: large_blue_circle   :black_circle: black_circle :white_circle: white_circle   :black_large_square: black_large_square :white_large_square: white_large_square   :black_medium_square: black_medium_square :white_medium_square: white_medium_square   :black_medium_small_square: black_medium_small_square :white_medium_small_square: white_medium_small_square   :black_small_square: black_small_square :white_small_square: white_small_square   :large_orange_diamond: large_orange_diamond :large_blue_diamond: large_blue_diamond   :small_orange_diamond: small_orange_diamond :small_blue_diamond: small_blue_diamond   :small_red_triangle: small_red_triangle :small_red_triangle_down: small_red_triangle_down   :diamond_shape_with_a_dot_inside: diamond_shape_with_a_dot_inside :radio_button: radio_button   :white_square_button: white_square_button :black_square_button: black_square_button    Other Symbol    icon code icon code     :recycle: recycle :fleur_de_lis: fleur_de_lis   :trident: trident :name_badge: name_badge   :beginner: beginner :o: o   :white_check_mark: white_check_mark :ballot_box_with_check: ballot_box_with_check   :heavy_check_mark: heavy_check_mark :x: x   :negative_squared_cross_mark: negative_squared_cross_mark :curly_loop: curly_loop   :loop: loop :part_alternation_mark: part_alternation_mark   :eight_spoked_asterisk: eight_spoked_asterisk :eight_pointed_black_star: eight_pointed_black_star   :sparkle: sparkle :copyright: copyright   :registered: registered :tm: tm    Flags Common Flags    icon code icon code     :checkered_flag: checkered_flag :triangular_flag_on_post: triangular_flag_on_post   :crossed_flags: crossed_flags :black_flag: black_flag   :white_flag: white_flag :rainbow_flag: rainbow_flag    Country and Region Flags    icon code icon code     :andorra: andorra :united_arab_emirates: united_arab_emirates   :afghanistan: afghanistan :antigua_barbuda: antigua_barbuda   :anguilla: anguilla :albania: albania   :armenia: armenia :angola: angola   :antarctica: antarctica :argentina: argentina   :american_samoa: american_samoa :austria: austria   :australia: australia :aruba: aruba   :aland_islands: aland_islands :azerbaijan: azerbaijan   :bosnia_herzegovina: bosnia_herzegovina :barbados: barbados   :bangladesh: bangladesh :belgium: belgium   :burkina_faso: burkina_faso :bulgaria: bulgaria   :bahrain: bahrain :burundi: burundi   :benin: benin :st_barthelemy: st_barthelemy   :bermuda: bermuda :brunei: brunei   :bolivia: bolivia :caribbean_netherlands: caribbean_netherlands   :brazil: brazil :bahamas: bahamas   :bhutan: bhutan :botswana: botswana   :belarus: belarus :belize: belize   :canada: canada :cocos_islands: cocos_islands   :congo_kinshasa: congo_kinshasa :central_african_republic: central_african_republic   :congo_brazzaville: congo_brazzaville :switzerland: switzerland   :cote_divoire: cote_divoire :cook_islands: cook_islands   :chile: chile :cameroon: cameroon   :cn: cn :colombia: colombia   :costa_rica: costa_rica :cuba: cuba   :cape_verde: cape_verde :curacao: curacao   :christmas_island: christmas_island :cyprus: cyprus   :czech_republic: czech_republic :de: de   :djibouti: djibouti :denmark: denmark   :dominica: dominica :dominican_republic: dominican_republic   :algeria: algeria :ecuador: ecuador   :estonia: estonia :egypt: egypt   :western_sahara: western_sahara :eritrea: eritrea   :es: es :ethiopia: ethiopia   :eu: eu european_union :finland: finland   :fiji: fiji :falkland_islands: falkland_islands   :micronesia: micronesia :faroe_islands: faroe_islands   :fr: fr :gabon: gabon   :gb: gb uk :grenada: grenada   :georgia: georgia :french_guiana: french_guiana   :guernsey: guernsey :ghana: ghana   :gibraltar: gibraltar :greenland: greenland   :gambia: gambia :guinea: guinea   :guadeloupe: guadeloupe :equatorial_guinea: equatorial_guinea   :greece: greece :south_georgia_south_sandwich_islands: south_georgia_south_sandwich_islands   :guatemala: guatemala :guam: guam   :guinea_bissau: guinea_bissau :guyana: guyana   :hong_kong: hong_kong :honduras: honduras   :croatia: croatia :haiti: haiti   :hungary: hungary :canary_islands: canary_islands   :indonesia: indonesia :ireland: ireland   :israel: israel :isle_of_man: isle_of_man   :india: india :british_indian_ocean_territory: british_indian_ocean_territory   :iraq: iraq :iran: iran   :iceland: iceland :it: it   :jersey: jersey :jamaica: jamaica   :jordan: jordan :jp: jp   :kenya: kenya :kyrgyzstan: kyrgyzstan   :cambodia: cambodia :kiribati: kiribati   :comoros: comoros :st_kitts_nevis: st_kitts_nevis   :north_korea: north_korea :kr: kr   :kuwait: kuwait :cayman_islands: cayman_islands   :kazakhstan: kazakhstan :laos: laos   :lebanon: lebanon :st_lucia: st_lucia   :liechtenstein: liechtenstein :sri_lanka: sri_lanka   :liberia: liberia :lesotho: lesotho   :lithuania: lithuania :luxembourg: luxembourg   :latvia: latvia :libya: libya   :morocco: morocco :monaco: monaco   :moldova: moldova :montenegro: montenegro   :madagascar: madagascar :marshall_islands: marshall_islands   :macedonia: macedonia :mali: mali   :myanmar: myanmar :mongolia: mongolia   :macau: macau :northern_mariana_islands: northern_mariana_islands   :martinique: martinique :mauritania: mauritania   :montserrat: montserrat :malta: malta   :mauritius: mauritius :maldives: maldives   :malawi: malawi :mexico: mexico   :malaysia: malaysia :mozambique: mozambique   :namibia: namibia :new_caledonia: new_caledonia   :niger: niger :norfolk_island: norfolk_island   :nigeria: nigeria :nicaragua: nicaragua   :netherlands: netherlands :norway: norway   :nepal: nepal :nauru: nauru   :niue: niue :new_zealand: new_zealand   :oman: oman :panama: panama   :peru: peru :french_polynesia: french_polynesia   :papua_new_guinea: papua_new_guinea :philippines: philippines   :pakistan: pakistan :poland: poland   :st_pierre_miquelon: st_pierre_miquelon :pitcairn_islands: pitcairn_islands   :puerto_rico: puerto_rico :palestinian_territories: palestinian_territories   :portugal: portugal :palau: palau   :paraguay: paraguay :qatar: qatar   :reunion: reunion :romania: romania   :serbia: serbia :ru: ru   :rwanda: rwanda :saudi_arabia: saudi_arabia   :solomon_islands: solomon_islands :seychelles: seychelles   :sudan: sudan :sweden: sweden   :singapore: singapore :st_helena: st_helena   :slovenia: slovenia :slovakia: slovakia   :sierra_leone: sierra_leone :san_marino: san_marino   :senegal: senegal :somalia: somalia   :suriname: suriname :south_sudan: south_sudan   :sao_tome_principe: sao_tome_principe :el_salvador: el_salvador   :sint_maarten: sint_maarten :syria: syria   :swaziland: swaziland :turks_caicos_islands: turks_caicos_islands   :chad: chad :french_southern_territories: french_southern_territories   :togo: togo :thailand: thailand   :tajikistan: tajikistan :tokelau: tokelau   :timor_leste: timor_leste :turkmenistan: turkmenistan   :tunisia: tunisia :tonga: tonga   :tr: tr :trinidad_tobago: trinidad_tobago   :tuvalu: tuvalu :taiwan: taiwan   :tanzania: tanzania :ukraine: ukraine   :uganda: uganda :us: us   :uruguay: uruguay :uzbekistan: uzbekistan   :vatican_city: vatican_city :st_vincent_grenadines: st_vincent_grenadines   :venezuela: venezuela :british_virgin_islands: british_virgin_islands   :us_virgin_islands: us_virgin_islands :vietnam: vietnam   :vanuatu: vanuatu :wallis_futuna: wallis_futuna   :samoa: samoa :kosovo: kosovo   :yemen: yemen :mayotte: mayotte   :south_africa: south_africa :zambia: zambia   :zimbabwe: zimbabwe     "
},
{
	"uri": "https://example.com/shortcodes/collapse/",
	"title": "Collapse",
	"tags": [],
	"description": "",
	"content": "Feel like hiding some content from your visitor in a collapsible element? The collapse shortcode does exactly that. It creates a button that shows or hides the content in the shortcode on request.\nClick me to show content  Hi there, I'm the hidden content. Didn't see that one coming, huh?   Usage Simply place the following shortcode on the page Copy   {{\u0026lt; collapse title=\u0026#34;TITLE\u0026#34; \u0026gt;}} [content] {{\u0026lt; /collapse \u0026gt;}}    Parameters title The lang parameter defines the text to show in the button that toggles the collapse content.\nExample: title=\u0026quot;Click me to show content\u0026quot;.\n"
},
{
	"uri": "https://example.com/posts/emoji-support/",
	"title": "Emoji Extension Support",
	"tags": ["emoji-extensions"],
	"description": "Guide to emoji usage in Hugo and LoveIt.",
	"content": "Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files.\nThese begin and end with a colon and include the code of an emoji:\nGone camping! {?:}tent: Be back soon. That is so funny! {?:}joy: The rendered output looks like this:\nGone camping! :tent: Be back soon.\nThat is so funny! :joy:\nThe following cheat sheet is a useful reference for emoji shorthand codes.\nSmileys \u0026amp; Emotion Face Smiling    icon code icon code     :grinning: grinning :smiley: smiley   :smile: smile :grin: grin   :laughing: laughing satisfied :sweat_smile: sweat_smile   :rofl: rofl :joy: joy   :slightly_smiling_face: slightly_smiling_face :upside_down_face: upside_down_face   :wink: wink :blush: blush   :innocent: innocent      Face Affection    icon code icon code     :heart_eyes: heart_eyes :kissing_heart: kissing_heart   :kissing: kissing :relaxed: relaxed   :kissing_closed_eyes: kissing_closed_eyes :kissing_smiling_eyes: kissing_smiling_eyes    Face Tongue    icon code icon code     :yum: yum :stuck_out_tongue: stuck_out_tongue   :stuck_out_tongue_winking_eye: stuck_out_tongue_winking_eye :stuck_out_tongue_closed_eyes: stuck_out_tongue_closed_eyes   :money_mouth_face: money_mouth_face      Face Hand    icon code icon code     :hugs: hugs :thinking: thinking    Face Neutral Skeptical    icon code icon code     :zipper_mouth_face: zipper_mouth_face :neutral_face: neutral_face   :expressionless: expressionless :no_mouth: no_mouth   :smirk: smirk :unamused: unamused   :roll_eyes: roll_eyes :grimacing: grimacing   :lying_face: lying_face      Face Sleepy    icon code icon code     :relieved: relieved :pensive: pensive   :sleepy: sleepy :drooling_face: drooling_face   :sleeping: sleeping      Face Unwell    icon code icon code     :mask: mask :face_with_thermometer: face_with_thermometer   :face_with_head_bandage: face_with_head_bandage :nauseated_face: nauseated_face   :sneezing_face: sneezing_face :dizzy_face: dizzy_face    Face Hat    icon code icon code     :cowboy_hat_face: cowboy_hat_face      Face Glasses    icon code icon code     :sunglasses: sunglasses :nerd_face: nerd_face    Face Concerned    icon code icon code     :confused: confused :worried: worried   :slightly_frowning_face: slightly_frowning_face :frowning_face: frowning_face   :open_mouth: open_mouth :hushed: hushed   :astonished: astonished :flushed: flushed   :frowning: frowning :anguished: anguished   :fearful: fearful :cold_sweat: cold_sweat   :disappointed_relieved: disappointed_relieved :cry: cry   :sob: sob :scream: scream   :confounded: confounded :persevere: persevere   :disappointed: disappointed :sweat: sweat   :weary: weary :tired_face: tired_face    Face Negative    icon code icon code     :triumph: triumph :pout: pout rage   :angry: angry :smiling_imp: smiling_imp   :imp: imp :skull: skull   :skull_and_crossbones: skull_and_crossbones      Face Costume    icon code icon code     :hankey: hankey poop shit :clown_face: clown_face   :japanese_ogre: japanese_ogre :japanese_goblin: japanese_goblin   :ghost: ghost :alien: alien   :space_invader: space_invader :robot: robot    Cat Face    icon code icon code     :smiley_cat: smiley_cat :smile_cat: smile_cat   :joy_cat: joy_cat :heart_eyes_cat: heart_eyes_cat   :smirk_cat: smirk_cat :kissing_cat: kissing_cat   :scream_cat: scream_cat :crying_cat_face: crying_cat_face   :pouting_cat: pouting_cat      Monkey Face    icon code icon code     :see_no_evil: see_no_evil :hear_no_evil: hear_no_evil   :speak_no_evil: speak_no_evil      Emotion    icon code icon code     :kiss: kiss :love_letter: love_letter   :cupid: cupid :gift_heart: gift_heart   :sparkling_heart: sparkling_heart :heartpulse: heartpulse   :heartbeat: heartbeat :revolving_hearts: revolving_hearts   :two_hearts: two_hearts :heart_decoration: heart_decoration   :heavy_heart_exclamation: heavy_heart_exclamation :broken_heart: broken_heart   :heart: heart :yellow_heart: yellow_heart   :green_heart: green_heart :blue_heart: blue_heart   :purple_heart: purple_heart :black_heart: black_heart   :100: 100 :anger: anger   :boom: boom collision :dizzy: dizzy   :sweat_drops: sweat_drops :dash: dash   :hole: hole :bomb: bomb   :speech_balloon: speech_balloon :eye_speech_bubble: eye_speech_bubble   :right_anger_bubble: right_anger_bubble :thought_balloon: thought_balloon   :zzz: zzz      People \u0026amp; Body Hand Fingers Open    icon code icon code     :wave: wave :raised_back_of_hand: raised_back_of_hand   :raised_hand_with_fingers_splayed: raised_hand_with_fingers_splayed :hand: hand raised_hand   :vulcan_salute: vulcan_salute      Hand Fingers Partial    icon code icon code     :ok_hand: ok_hand :v: v   :crossed_fingers: crossed_fingers :metal: metal   :call_me_hand: call_me_hand      Hand Single Finger    icon code icon code     :point_left: point_left :point_right: point_right   :point_up_2: point_up_2 :fu: fu middle_finger   :point_down: point_down :point_up: point_up    Hand Fingers Closed    icon code icon code     :+1: +1 thumbsup :-1: -1 thumbsdown   :fist: fist fist_raised :facepunch: facepunch fist_oncoming punch   :fist_left: fist_left :fist_right: fist_right    Hands    icon code icon code     :clap: clap :raised_hands: raised_hands   :open_hands: open_hands :handshake: handshake   :pray: pray      Hand Prop    icon code icon code     :writing_hand: writing_hand :nail_care: nail_care   :selfie: selfie      Body Parts    icon code icon code     :muscle: muscle :ear: ear   :nose: nose :eyes: eyes   :eye: eye :tongue: tongue   :lips: lips      Person    icon code icon code     :baby: baby :boy: boy   :girl: girl :blonde_man: blonde_man person_with_blond_hair   :man: man :woman: woman   :blonde_woman: blonde_woman :older_man: older_man   :older_woman: older_woman      Person Gesture    icon code icon code     :frowning_woman: frowning_woman person_frowning :frowning_man: frowning_man   :person_with_pouting_face: person_with_pouting_face pouting_woman :pouting_man: pouting_man   :ng_woman: ng_woman no_good no_good_woman :ng_man: ng_man no_good_man   :ok_woman: ok_woman :ok_man: ok_man   :information_desk_person: information_desk_person sassy_woman tipping_hand_woman :sassy_man: sassy_man tipping_hand_man   :raising_hand: raising_hand raising_hand_woman :raising_hand_man: raising_hand_man   :bow: bow bowing_man :bowing_woman: bowing_woman   :man_facepalming: man_facepalming :woman_facepalming: woman_facepalming   :man_shrugging: man_shrugging :woman_shrugging: woman_shrugging    Person Role    icon code icon code     :man_health_worker: man_health_worker :woman_health_worker: woman_health_worker   :man_student: man_student :woman_student: woman_student   :man_teacher: man_teacher :woman_teacher: woman_teacher   :man_judge: man_judge :woman_judge: woman_judge   :man_farmer: man_farmer :woman_farmer: woman_farmer   :man_cook: man_cook :woman_cook: woman_cook   :man_mechanic: man_mechanic :woman_mechanic: woman_mechanic   :man_factory_worker: man_factory_worker :woman_factory_worker: woman_factory_worker   :man_office_worker: man_office_worker :woman_office_worker: woman_office_worker   :man_scientist: man_scientist :woman_scientist: woman_scientist   :man_technologist: man_technologist :woman_technologist: woman_technologist   :man_singer: man_singer :woman_singer: woman_singer   :man_artist: man_artist :woman_artist: woman_artist   :man_pilot: man_pilot :woman_pilot: woman_pilot   :man_astronaut: man_astronaut :woman_astronaut: woman_astronaut   :man_firefighter: man_firefighter :woman_firefighter: woman_firefighter   :cop: cop policeman :policewoman: policewoman   :detective: detective male_detective :female_detective: female_detective   :guardsman: guardsman :guardswoman: guardswoman   :construction_worker: construction_worker construction_worker_man :construction_worker_woman: construction_worker_woman   :prince: prince :princess: princess   :man_with_turban: man_with_turban :woman_with_turban: woman_with_turban   :man_with_gua_pi_mao: man_with_gua_pi_mao :man_in_tuxedo: man_in_tuxedo   :bride_with_veil: bride_with_veil :pregnant_woman: pregnant_woman    Person Fantasy    icon code icon code     :angel: angel :santa: santa   :mrs_claus: mrs_claus      Person Activity    icon code icon code     :massage: massage massage_woman :massage_man: massage_man   :haircut: haircut haircut_woman :haircut_man: haircut_man   :walking: walking walking_man :walking_woman: walking_woman   :runner: runner running running_man :running_woman: running_woman   :dancer: dancer :man_dancing: man_dancing   :business_suit_levitating: business_suit_levitating :dancers: dancers dancing_women   :dancing_men: dancing_men      Person Sport    icon code icon code     :person_fencing: person_fencing :horse_racing: horse_racing   :skier: skier :snowboarder: snowboarder   :golfing_man: golfing_man :golfing_woman: golfing_woman   :surfer: surfer surfing_man :surfing_woman: surfing_woman   :rowboat: rowboat rowing_man :rowing_woman: rowing_woman   :swimmer: swimmer swimming_man :swimming_woman: swimming_woman   :basketball_man: basketball_man :basketball_woman: basketball_woman   :weight_lifting_man: weight_lifting_man :weight_lifting_woman: weight_lifting_woman   :bicyclist: bicyclist biking_man :biking_woman: biking_woman   :mountain_bicyclist: mountain_bicyclist mountain_biking_man :mountain_biking_woman: mountain_biking_woman   :man_cartwheeling: man_cartwheeling :woman_cartwheeling: woman_cartwheeling   :men_wrestling: men_wrestling :women_wrestling: women_wrestling   :man_playing_water_polo: man_playing_water_polo :woman_playing_water_polo: woman_playing_water_polo   :man_playing_handball: man_playing_handball :woman_playing_handball: woman_playing_handball   :man_juggling: man_juggling :woman_juggling: woman_juggling    Person Resting    icon code icon code     :bath: bath :sleeping_bed: sleeping_bed    Family    icon code icon code     :two_women_holding_hands: two_women_holding_hands :couple: couple   :two_men_holding_hands: two_men_holding_hands :couplekiss_man_woman: couplekiss_man_woman   :couplekiss_man_man: couplekiss_man_man :couplekiss_woman_woman: couplekiss_woman_woman   :couple_with_heart: couple_with_heart couple_with_heart_woman_man :couple_with_heart_man_man: couple_with_heart_man_man   :couple_with_heart_woman_woman: couple_with_heart_woman_woman :family: family family_man_woman_boy   :family_man_woman_girl: family_man_woman_girl :family_man_woman_girl_boy: family_man_woman_girl_boy   :family_man_woman_boy_boy: family_man_woman_boy_boy :family_man_woman_girl_girl: family_man_woman_girl_girl   :family_man_man_boy: family_man_man_boy :family_man_man_girl: family_man_man_girl   :family_man_man_girl_boy: family_man_man_girl_boy :family_man_man_boy_boy: family_man_man_boy_boy   :family_man_man_girl_girl: family_man_man_girl_girl :family_woman_woman_boy: family_woman_woman_boy   :family_woman_woman_girl: family_woman_woman_girl :family_woman_woman_girl_boy: family_woman_woman_girl_boy   :family_woman_woman_boy_boy: family_woman_woman_boy_boy :family_woman_woman_girl_girl: family_woman_woman_girl_girl   :family_man_boy: family_man_boy :family_man_boy_boy: family_man_boy_boy   :family_man_girl: family_man_girl :family_man_girl_boy: family_man_girl_boy   :family_man_girl_girl: family_man_girl_girl :family_woman_boy: family_woman_boy   :family_woman_boy_boy: family_woman_boy_boy :family_woman_girl: family_woman_girl   :family_woman_girl_boy: family_woman_girl_boy :family_woman_girl_girl: family_woman_girl_girl    Person Symbol    icon code icon code     :speaking_head: speaking_head :bust_in_silhouette: bust_in_silhouette   :busts_in_silhouette: busts_in_silhouette :footprints: footprints    Animals \u0026amp; Nature Animal Mammal    icon code icon code     :monkey_face: monkey_face :monkey: monkey   :gorilla: gorilla :dog: dog   :dog2: dog2 :poodle: poodle   :wolf: wolf :fox_face: fox_face   :cat: cat :cat2: cat2   :lion: lion :tiger: tiger   :tiger2: tiger2 :leopard: leopard   :horse: horse :racehorse: racehorse   :unicorn: unicorn :deer: deer   :cow: cow :ox: ox   :water_buffalo: water_buffalo :cow2: cow2   :pig: pig :pig2: pig2   :boar: boar :pig_nose: pig_nose   :ram: ram :sheep: sheep   :goat: goat :dromedary_camel: dromedary_camel   :camel: camel :elephant: elephant   :rhinoceros: rhinoceros :mouse: mouse   :mouse2: mouse2 :rat: rat   :hamster: hamster :rabbit: rabbit   :rabbit2: rabbit2 :chipmunk: chipmunk   :bat: bat :bear: bear   :koala: koala :panda_face: panda_face   :feet: feet paw_prints      Animal Bird    icon code icon code     :turkey: turkey :chicken: chicken   :rooster: rooster :hatching_chick: hatching_chick   :baby_chick: baby_chick :hatched_chick: hatched_chick   :bird: bird :penguin: penguin   :dove: dove :eagle: eagle   :duck: duck :owl: owl    Animal Amphibian    icon code icon code     :frog: frog      Animal Reptile    icon code icon code     :crocodile: crocodile :turtle: turtle   :lizard: lizard :snake: snake   :dragon_face: dragon_face :dragon: dragon    Animal Marine    icon code icon code     :whale: whale :whale2: whale2   :dolphin: dolphin flipper :fish: fish   :tropical_fish: tropical_fish :blowfish: blowfish   :shark: shark :octopus: octopus   :shell: shell      Animal Bug    icon code icon code     :snail: snail :butterfly: butterfly   :bug: bug :ant: ant   :bee: bee honeybee :beetle: beetle   :spider: spider :spider_web: spider_web   :scorpion: scorpion      Plant Flower    icon code icon code     :bouquet: bouquet :cherry_blossom: cherry_blossom   :white_flower: white_flower :rosette: rosette   :rose: rose :wilted_flower: wilted_flower   :hibiscus: hibiscus :sunflower: sunflower   :blossom: blossom :tulip: tulip    Plant Other    icon code icon code     :seedling: seedling :evergreen_tree: evergreen_tree   :deciduous_tree: deciduous_tree :palm_tree: palm_tree   :cactus: cactus :ear_of_rice: ear_of_rice   :herb: herb :shamrock: shamrock   :four_leaf_clover: four_leaf_clover :maple_leaf: maple_leaf   :fallen_leaf: fallen_leaf :leaves: leaves    Food \u0026amp; Drink Food Fruit    icon code icon code     :grapes: grapes :melon: melon   :watermelon: watermelon :mandarin: mandarin orange tangerine   :lemon: lemon :banana: banana   :pineapple: pineapple :apple: apple   :green_apple: green_apple :pear: pear   :peach: peach :cherries: cherries   :strawberry: strawberry :kiwi_fruit: kiwi_fruit   :tomato: tomato      Food Vegetable    icon code icon code     :avocado: avocado :eggplant: eggplant   :potato: potato :carrot: carrot   :corn: corn :hot_pepper: hot_pepper   :cucumber: cucumber :mushroom: mushroom   :peanuts: peanuts :chestnut: chestnut    Food Prepared    icon code icon code     :bread: bread :croissant: croissant   :baguette_bread: baguette_bread :pancakes: pancakes   :cheese: cheese :meat_on_bone: meat_on_bone   :poultry_leg: poultry_leg :bacon: bacon   :hamburger: hamburger :fries: fries   :pizza: pizza :hotdog: hotdog   :taco: taco :burrito: burrito   :stuffed_flatbread: stuffed_flatbread :egg: egg   :fried_egg: fried_egg :shallow_pan_of_food: shallow_pan_of_food   :stew: stew :green_salad: green_salad   :popcorn: popcorn      Food Asian    icon code icon code     :bento: bento :rice_cracker: rice_cracker   :rice_ball: rice_ball :rice: rice   :curry: curry :ramen: ramen   :spaghetti: spaghetti :sweet_potato: sweet_potato   :oden: oden :sushi: sushi   :fried_shrimp: fried_shrimp :fish_cake: fish_cake   :dango: dango      Food Marine    icon code icon code     :crab: crab :shrimp: shrimp   :squid: squid      Food Sweet    icon code icon code     :icecream: icecream :shaved_ice: shaved_ice   :ice_cream: ice_cream :doughnut: doughnut   :cookie: cookie :birthday: birthday   :cake: cake :chocolate_bar: chocolate_bar   :candy: candy :lollipop: lollipop   :custard: custard :honey_pot: honey_pot    Drink    icon code icon code     :baby_bottle: baby_bottle :milk_glass: milk_glass   :coffee: coffee :tea: tea   :sake: sake :champagne: champagne   :wine_glass: wine_glass :cocktail: cocktail   :tropical_drink: tropical_drink :beer: beer   :beers: beers :clinking_glasses: clinking_glasses   :tumbler_glass: tumbler_glass      Dishware    icon code icon code     :plate_with_cutlery: plate_with_cutlery :fork_and_knife: fork_and_knife   :spoon: spoon :hocho: hocho knife   :amphora: amphora      Travel \u0026amp; Places Place Map    icon code icon code     :earth_africa: earth_africa :earth_americas: earth_americas   :earth_asia: earth_asia :globe_with_meridians: globe_with_meridians   :world_map: world_map :japan: japan    Place Geographic    icon code icon code     :mountain_snow: mountain_snow :mountain: mountain   :volcano: volcano :mount_fuji: mount_fuji   :camping: camping :beach_umbrella: beach_umbrella   :desert: desert :desert_island: desert_island   :national_park: national_park      Place Building    icon code icon code     :stadium: stadium :classical_building: classical_building   :building_construction: building_construction :houses: houses   :derelict_house: derelict_house :house: house   :house_with_garden: house_with_garden :office: office   :post_office: post_office :european_post_office: european_post_office   :hospital: hospital :bank: bank   :hotel: hotel :love_hotel: love_hotel   :convenience_store: convenience_store :school: school   :department_store: department_store :factory: factory   :japanese_castle: japanese_castle :european_castle: european_castle   :wedding: wedding :tokyo_tower: tokyo_tower   :statue_of_liberty: statue_of_liberty      Place Religious    icon code icon code     :church: church :mosque: mosque   :synagogue: synagogue :shinto_shrine: shinto_shrine   :kaaba: kaaba      Place Other    icon code icon code     :fountain: fountain :tent: tent   :foggy: foggy :night_with_stars: night_with_stars   :cityscape: cityscape :sunrise_over_mountains: sunrise_over_mountains   :sunrise: sunrise :city_sunset: city_sunset   :city_sunrise: city_sunrise :bridge_at_night: bridge_at_night   :hotsprings: hotsprings :carousel_horse: carousel_horse   :ferris_wheel: ferris_wheel :roller_coaster: roller_coaster   :barber: barber :circus_tent: circus_tent    Transport Ground    icon code icon code     :steam_locomotive: steam_locomotive :railway_car: railway_car   :bullettrain_side: bullettrain_side :bullettrain_front: bullettrain_front   :train2: train2 :metro: metro   :light_rail: light_rail :station: station   :tram: tram :monorail: monorail   :mountain_railway: mountain_railway :train: train   :bus: bus :oncoming_bus: oncoming_bus   :trolleybus: trolleybus :minibus: minibus   :ambulance: ambulance :fire_engine: fire_engine   :police_car: police_car :oncoming_police_car: oncoming_police_car   :taxi: taxi :oncoming_taxi: oncoming_taxi   :car: car red_car :oncoming_automobile: oncoming_automobile   :blue_car: blue_car :truck: truck   :articulated_lorry: articulated_lorry :tractor: tractor   :racing_car: racing_car :motorcycle: motorcycle   :motor_scooter: motor_scooter :bike: bike   :kick_scooter: kick_scooter :busstop: busstop   :motorway: motorway :railway_track: railway_track   :oil_drum: oil_drum :fuelpump: fuelpump   :rotating_light: rotating_light :traffic_light: traffic_light   :vertical_traffic_light: vertical_traffic_light :stop_sign: stop_sign   :construction: construction      Transport Water    icon code icon code     :anchor: anchor :boat: boat sailboat   :canoe: canoe :speedboat: speedboat   :passenger_ship: passenger_ship :ferry: ferry   :motor_boat: motor_boat :ship: ship    Transport Air    icon code icon code     :airplane: airplane :small_airplane: small_airplane   :flight_departure: flight_departure :flight_arrival: flight_arrival   :seat: seat :helicopter: helicopter   :suspension_railway: suspension_railway :mountain_cableway: mountain_cableway   :aerial_tramway: aerial_tramway :artificial_satellite: artificial_satellite   :rocket: rocket      Hotel    icon code icon code     :bellhop_bell: bellhop_bell      Time    icon code icon code     :hourglass: hourglass :hourglass_flowing_sand: hourglass_flowing_sand   :watch: watch :alarm_clock: alarm_clock   :stopwatch: stopwatch :timer_clock: timer_clock   :mantelpiece_clock: mantelpiece_clock :clock12: clock12   :clock1230: clock1230 :clock1: clock1   :clock130: clock130 :clock2: clock2   :clock230: clock230 :clock3: clock3   :clock330: clock330 :clock4: clock4   :clock430: clock430 :clock5: clock5   :clock530: clock530 :clock6: clock6   :clock630: clock630 :clock7: clock7   :clock730: clock730 :clock8: clock8   :clock830: clock830 :clock9: clock9   :clock930: clock930 :clock10: clock10   :clock1030: clock1030 :clock11: clock11   :clock1130: clock1130      Sky \u0026amp; Weather    icon code icon code     :new_moon: new_moon :waxing_crescent_moon: waxing_crescent_moon   :first_quarter_moon: first_quarter_moon :moon: moon waxing_gibbous_moon   :full_moon: full_moon :waning_gibbous_moon: waning_gibbous_moon   :last_quarter_moon: last_quarter_moon :waning_crescent_moon: waning_crescent_moon   :crescent_moon: crescent_moon :new_moon_with_face: new_moon_with_face   :first_quarter_moon_with_face: first_quarter_moon_with_face :last_quarter_moon_with_face: last_quarter_moon_with_face   :thermometer: thermometer :sunny: sunny   :full_moon_with_face: full_moon_with_face :sun_with_face: sun_with_face   :star: star :star2: star2   :stars: stars :milky_way: milky_way   :cloud: cloud :partly_sunny: partly_sunny   :cloud_with_lightning_and_rain: cloud_with_lightning_and_rain :sun_behind_small_cloud: sun_behind_small_cloud   :sun_behind_large_cloud: sun_behind_large_cloud :sun_behind_rain_cloud: sun_behind_rain_cloud   :cloud_with_rain: cloud_with_rain :cloud_with_snow: cloud_with_snow   :cloud_with_lightning: cloud_with_lightning :tornado: tornado   :fog: fog :wind_face: wind_face   :cyclone: cyclone :rainbow: rainbow   :closed_umbrella: closed_umbrella :open_umbrella: open_umbrella   :umbrella: umbrella :parasol_on_ground: parasol_on_ground   :zap: zap :snowflake: snowflake   :snowman_with_snow: snowman_with_snow :snowman: snowman   :comet: comet :fire: fire   :droplet: droplet :ocean: ocean    Activities Event    icon code icon code     :jack_o_lantern: jack_o_lantern :christmas_tree: christmas_tree   :fireworks: fireworks :sparkler: sparkler   :sparkles: sparkles :balloon: balloon   :tada: tada :confetti_ball: confetti_ball   :tanabata_tree: tanabata_tree :bamboo: bamboo   :dolls: dolls :flags: flags   :wind_chime: wind_chime :rice_scene: rice_scene   :ribbon: ribbon :gift: gift   :reminder_ribbon: reminder_ribbon :tickets: tickets   :ticket: ticket      Award Medal    icon code icon code     :medal_military: medal_military :trophy: trophy   :medal_sports: medal_sports :1st_place_medal: 1st_place_medal   :2nd_place_medal: 2nd_place_medal :3rd_place_medal: 3rd_place_medal    Sport    icon code icon code     :soccer: soccer :baseball: baseball   :basketball: basketball :volleyball: volleyball   :football: football :rugby_football: rugby_football   :tennis: tennis :bowling: bowling   :cricket: cricket :field_hockey: field_hockey   :ice_hockey: ice_hockey :ping_pong: ping_pong   :badminton: badminton :boxing_glove: boxing_glove   :martial_arts_uniform: martial_arts_uniform :goal_net: goal_net   :golf: golf :ice_skate: ice_skate   :fishing_pole_and_fish: fishing_pole_and_fish :running_shirt_with_sash: running_shirt_with_sash   :ski: ski      Game    icon code icon code     :dart: dart :8ball: 8ball   :crystal_ball: crystal_ball :video_game: video_game   :joystick: joystick :slot_machine: slot_machine   :game_die: game_die :spades: spades   :hearts: hearts :diamonds: diamonds   :clubs: clubs :black_joker: black_joker   :mahjong: mahjong :flower_playing_cards: flower_playing_cards    Arts \u0026amp; Crafts    icon code icon code     :performing_arts: performing_arts :framed_picture: framed_picture   :art: art      Objects Clothing    icon code icon code     :eyeglasses: eyeglasses :dark_sunglasses: dark_sunglasses   :necktie: necktie :shirt: shirt tshirt   :jeans: jeans :dress: dress   :kimono: kimono :bikini: bikini   :womans_clothes: womans_clothes :purse: purse   :handbag: handbag :pouch: pouch   :shopping: shopping :school_satchel: school_satchel   :mans_shoe: mans_shoe shoe :athletic_shoe: athletic_shoe   :high_heel: high_heel :sandal: sandal   :boot: boot :crown: crown   :womans_hat: womans_hat :tophat: tophat   :mortar_board: mortar_board :rescue_worker_helmet: rescue_worker_helmet   :prayer_beads: prayer_beads :lipstick: lipstick   :ring: ring :gem: gem    Sound    icon code icon code     :mute: mute :speaker: speaker   :sound: sound :loud_sound: loud_sound   :loudspeaker: loudspeaker :mega: mega   :postal_horn: postal_horn :bell: bell   :no_bell: no_bell      Music    icon code icon code     :musical_score: musical_score :musical_note: musical_note   :notes: notes :studio_microphone: studio_microphone   :level_slider: level_slider :control_knobs: control_knobs   :microphone: microphone :headphones: headphones   :radio: radio      Musical Instrument    icon code icon code     :saxophone: saxophone :guitar: guitar   :musical_keyboard: musical_keyboard :trumpet: trumpet   :violin: violin :drum: drum    Phone    icon code icon code     :iphone: iphone :calling: calling   :phone: phone telephone :telephone_receiver: telephone_receiver   :pager: pager :fax: fax    Computer    icon code icon code     :battery: battery :electric_plug: electric_plug   :computer: computer :desktop_computer: desktop_computer   :printer: printer :keyboard: keyboard   :computer_mouse: computer_mouse :trackball: trackball   :minidisc: minidisc :floppy_disk: floppy_disk   :cd: cd :dvd: dvd    Light \u0026amp; Video    icon code icon code     :movie_camera: movie_camera :film_strip: film_strip   :film_projector: film_projector :clapper: clapper   :tv: tv :camera: camera   :camera_flash: camera_flash :video_camera: video_camera   :vhs: vhs :mag: mag   :mag_right: mag_right :candle: candle   :bulb: bulb :flashlight: flashlight   :izakaya_lantern: izakaya_lantern lantern      Book Paper    icon code icon code     :notebook_with_decorative_cover: notebook_with_decorative_cover :closed_book: closed_book   :book: book open_book :green_book: green_book   :blue_book: blue_book :orange_book: orange_book   :books: books :notebook: notebook   :ledger: ledger :page_with_curl: page_with_curl   :scroll: scroll :page_facing_up: page_facing_up   :newspaper: newspaper :newspaper_roll: newspaper_roll   :bookmark_tabs: bookmark_tabs :bookmark: bookmark   :label: label      Money    icon code icon code     :moneybag: moneybag :yen: yen   :dollar: dollar :euro: euro   :pound: pound :money_with_wings: money_with_wings   :credit_card: credit_card :chart: chart    Mail    icon code icon code     :email: email envelope :e-mail: :e-mail:   :incoming_envelope: incoming_envelope :envelope_with_arrow: envelope_with_arrow   :outbox_tray: outbox_tray :inbox_tray: inbox_tray   :package: package :mailbox: mailbox   :mailbox_closed: mailbox_closed :mailbox_with_mail: mailbox_with_mail   :mailbox_with_no_mail: mailbox_with_no_mail :postbox: postbox   :ballot_box: ballot_box      Writing    icon code icon code     :pencil2: pencil2 :black_nib: black_nib   :fountain_pen: fountain_pen :pen: pen   :paintbrush: paintbrush :crayon: crayon   :memo: memo pencil      Office    icon code icon code     :briefcase: briefcase :file_folder: file_folder   :open_file_folder: open_file_folder :card_index_dividers: card_index_dividers   :date: date :calendar: calendar   :spiral_notepad: spiral_notepad :spiral_calendar: spiral_calendar   :card_index: card_index :chart_with_upwards_trend: chart_with_upwards_trend   :chart_with_downwards_trend: chart_with_downwards_trend :bar_chart: bar_chart   :clipboard: clipboard :pushpin: pushpin   :round_pushpin: round_pushpin :paperclip: paperclip   :paperclips: paperclips :straight_ruler: straight_ruler   :triangular_ruler: triangular_ruler :scissors: scissors   :card_file_box: card_file_box :file_cabinet: file_cabinet   :wastebasket: wastebasket      Lock    icon code icon code     :lock: lock :unlock: unlock   :lock_with_ink_pen: lock_with_ink_pen :closed_lock_with_key: closed_lock_with_key   :key: key :old_key: old_key    Tool    icon code icon code     :hammer: hammer :pick: pick   :hammer_and_pick: hammer_and_pick :hammer_and_wrench: hammer_and_wrench   :dagger: dagger :crossed_swords: crossed_swords   :gun: gun :bow_and_arrow: bow_and_arrow   :shield: shield :wrench: wrench   :nut_and_bolt: nut_and_bolt :gear: gear   :clamp: clamp :balance_scale: balance_scale   :link: link :chains: chains    Science    icon code icon code     :alembic: alembic :microscope: microscope   :telescope: telescope :satellite: satellite    Medical    icon code icon code     :syringe: syringe :pill: pill    Household    icon code icon code     :door: door :bed: bed   :couch_and_lamp: couch_and_lamp :toilet: toilet   :shower: shower :bathtub: bathtub   :shopping_cart: shopping_cart      Other Object    icon code icon code     :smoking: smoking :coffin: coffin   :funeral_urn: funeral_urn :moyai: moyai    Symbols Transport Sign    icon code icon code     :atm: atm :put_litter_in_its_place: put_litter_in_its_place   :potable_water: potable_water :wheelchair: wheelchair   :mens: mens :womens: womens   :restroom: restroom :baby_symbol: baby_symbol   :wc: wc :passport_control: passport_control   :customs: customs :baggage_claim: baggage_claim   :left_luggage: left_luggage      Warning    icon code icon code     :warning: warning :children_crossing: children_crossing   :no_entry: no_entry :no_entry_sign: no_entry_sign   :no_bicycles: no_bicycles :no_smoking: no_smoking   :do_not_litter: do_not_litter :non-potable_water: :non-potable_water:   :no_pedestrians: no_pedestrians :no_mobile_phones: no_mobile_phones   :underage: underage :radioactive: radioactive   :biohazard: biohazard      Arrow    icon code icon code     :arrow_up: arrow_up :arrow_upper_right: arrow_upper_right   :arrow_right: arrow_right :arrow_lower_right: arrow_lower_right   :arrow_down: arrow_down :arrow_lower_left: arrow_lower_left   :arrow_left: arrow_left :arrow_upper_left: arrow_upper_left   :arrow_up_down: arrow_up_down :left_right_arrow: left_right_arrow   :leftwards_arrow_with_hook: leftwards_arrow_with_hook :arrow_right_hook: arrow_right_hook   :arrow_heading_up: arrow_heading_up :arrow_heading_down: arrow_heading_down   :arrows_clockwise: arrows_clockwise :arrows_counterclockwise: arrows_counterclockwise   :back: back :end: end   :on: on :soon: soon   :top: top      Religion    icon code icon code     :place_of_worship: place_of_worship :atom_symbol: atom_symbol   :om: om :star_of_david: star_of_david   :wheel_of_dharma: wheel_of_dharma :yin_yang: yin_yang   :latin_cross: latin_cross :orthodox_cross: orthodox_cross   :star_and_crescent: star_and_crescent :peace_symbol: peace_symbol   :menorah: menorah :six_pointed_star: six_pointed_star    Zodiac    icon code icon code     :aries: aries :taurus: taurus   :gemini: gemini :cancer: cancer   :leo: leo :virgo: virgo   :libra: libra :scorpius: scorpius   :sagittarius: sagittarius :capricorn: capricorn   :aquarius: aquarius :pisces: pisces   :ophiuchus: ophiuchus      Av Symbol    icon code icon code     :twisted_rightwards_arrows: twisted_rightwards_arrows :repeat: repeat   :repeat_one: repeat_one :arrow_forward: arrow_forward   :fast_forward: fast_forward :next_track_button: next_track_button   :play_or_pause_button: play_or_pause_button :arrow_backward: arrow_backward   :rewind: rewind :previous_track_button: previous_track_button   :arrow_up_small: arrow_up_small :arrow_double_up: arrow_double_up   :arrow_down_small: arrow_down_small :arrow_double_down: arrow_double_down   :pause_button: pause_button :stop_button: stop_button   :record_button: record_button :cinema: cinema   :low_brightness: low_brightness :high_brightness: high_brightness   :signal_strength: signal_strength :vibration_mode: vibration_mode   :mobile_phone_off: mobile_phone_off      Math    icon code icon code     :heavy_multiplication_x: heavy_multiplication_x :heavy_plus_sign: heavy_plus_sign   :heavy_minus_sign: heavy_minus_sign :heavy_division_sign: heavy_division_sign    Punctuation    icon code icon code     :bangbang: bangbang :interrobang: interrobang   :question: question :grey_question: grey_question   :grey_exclamation: grey_exclamation :exclamation: exclamation heavy_exclamation_mark   :wavy_dash: wavy_dash      Currency    icon code icon code     :currency_exchange: currency_exchange :heavy_dollar_sign: heavy_dollar_sign    Keycap    icon code icon code     :hash: hash :asterisk: asterisk   :zero: zero :one: one   :two: two :three: three   :four: four :five: five   :six: six :seven: seven   :eight: eight :nine: nine   :keycap_ten: keycap_ten      Alphabet    icon code icon code     :capital_abcd: capital_abcd :abcd: abcd   :1234: 1234 :symbols: symbols   :abc: abc :a: a   :ab: ab :b: b   :cl: cl :cool: cool   :free: free :information_source: information_source   :id: id :m: m   :new: new :ng: ng   :o2: o2 :ok: ok   :parking: parking :sos: sos   :up: up :vs: vs   :koko: koko :sa: sa   :u6708: u6708 :u6709: u6709   :u6307: u6307 :ideograph_advantage: ideograph_advantage   :u5272: u5272 :u7121: u7121   :u7981: u7981 :accept: accept   :u7533: u7533 :u5408: u5408   :u7a7a: u7a7a :congratulations: congratulations   :secret: secret :u55b6: u55b6   :u6e80: u6e80      Geometric    icon code icon code     :red_circle: red_circle :large_blue_circle: large_blue_circle   :black_circle: black_circle :white_circle: white_circle   :black_large_square: black_large_square :white_large_square: white_large_square   :black_medium_square: black_medium_square :white_medium_square: white_medium_square   :black_medium_small_square: black_medium_small_square :white_medium_small_square: white_medium_small_square   :black_small_square: black_small_square :white_small_square: white_small_square   :large_orange_diamond: large_orange_diamond :large_blue_diamond: large_blue_diamond   :small_orange_diamond: small_orange_diamond :small_blue_diamond: small_blue_diamond   :small_red_triangle: small_red_triangle :small_red_triangle_down: small_red_triangle_down   :diamond_shape_with_a_dot_inside: diamond_shape_with_a_dot_inside :radio_button: radio_button   :white_square_button: white_square_button :black_square_button: black_square_button    Other Symbol    icon code icon code     :recycle: recycle :fleur_de_lis: fleur_de_lis   :trident: trident :name_badge: name_badge   :beginner: beginner :o: o   :white_check_mark: white_check_mark :ballot_box_with_check: ballot_box_with_check   :heavy_check_mark: heavy_check_mark :x: x   :negative_squared_cross_mark: negative_squared_cross_mark :curly_loop: curly_loop   :loop: loop :part_alternation_mark: part_alternation_mark   :eight_spoked_asterisk: eight_spoked_asterisk :eight_pointed_black_star: eight_pointed_black_star   :sparkle: sparkle :copyright: copyright   :registered: registered :tm: tm    Flags Common Flags    icon code icon code     :checkered_flag: checkered_flag :triangular_flag_on_post: triangular_flag_on_post   :crossed_flags: crossed_flags :black_flag: black_flag   :white_flag: white_flag :rainbow_flag: rainbow_flag    Country and Region Flags    icon code icon code     :andorra: andorra :united_arab_emirates: united_arab_emirates   :afghanistan: afghanistan :antigua_barbuda: antigua_barbuda   :anguilla: anguilla :albania: albania   :armenia: armenia :angola: angola   :antarctica: antarctica :argentina: argentina   :american_samoa: american_samoa :austria: austria   :australia: australia :aruba: aruba   :aland_islands: aland_islands :azerbaijan: azerbaijan   :bosnia_herzegovina: bosnia_herzegovina :barbados: barbados   :bangladesh: bangladesh :belgium: belgium   :burkina_faso: burkina_faso :bulgaria: bulgaria   :bahrain: bahrain :burundi: burundi   :benin: benin :st_barthelemy: st_barthelemy   :bermuda: bermuda :brunei: brunei   :bolivia: bolivia :caribbean_netherlands: caribbean_netherlands   :brazil: brazil :bahamas: bahamas   :bhutan: bhutan :botswana: botswana   :belarus: belarus :belize: belize   :canada: canada :cocos_islands: cocos_islands   :congo_kinshasa: congo_kinshasa :central_african_republic: central_african_republic   :congo_brazzaville: congo_brazzaville :switzerland: switzerland   :cote_divoire: cote_divoire :cook_islands: cook_islands   :chile: chile :cameroon: cameroon   :cn: cn :colombia: colombia   :costa_rica: costa_rica :cuba: cuba   :cape_verde: cape_verde :curacao: curacao   :christmas_island: christmas_island :cyprus: cyprus   :czech_republic: czech_republic :de: de   :djibouti: djibouti :denmark: denmark   :dominica: dominica :dominican_republic: dominican_republic   :algeria: algeria :ecuador: ecuador   :estonia: estonia :egypt: egypt   :western_sahara: western_sahara :eritrea: eritrea   :es: es :ethiopia: ethiopia   :eu: eu european_union :finland: finland   :fiji: fiji :falkland_islands: falkland_islands   :micronesia: micronesia :faroe_islands: faroe_islands   :fr: fr :gabon: gabon   :gb: gb uk :grenada: grenada   :georgia: georgia :french_guiana: french_guiana   :guernsey: guernsey :ghana: ghana   :gibraltar: gibraltar :greenland: greenland   :gambia: gambia :guinea: guinea   :guadeloupe: guadeloupe :equatorial_guinea: equatorial_guinea   :greece: greece :south_georgia_south_sandwich_islands: south_georgia_south_sandwich_islands   :guatemala: guatemala :guam: guam   :guinea_bissau: guinea_bissau :guyana: guyana   :hong_kong: hong_kong :honduras: honduras   :croatia: croatia :haiti: haiti   :hungary: hungary :canary_islands: canary_islands   :indonesia: indonesia :ireland: ireland   :israel: israel :isle_of_man: isle_of_man   :india: india :british_indian_ocean_territory: british_indian_ocean_territory   :iraq: iraq :iran: iran   :iceland: iceland :it: it   :jersey: jersey :jamaica: jamaica   :jordan: jordan :jp: jp   :kenya: kenya :kyrgyzstan: kyrgyzstan   :cambodia: cambodia :kiribati: kiribati   :comoros: comoros :st_kitts_nevis: st_kitts_nevis   :north_korea: north_korea :kr: kr   :kuwait: kuwait :cayman_islands: cayman_islands   :kazakhstan: kazakhstan :laos: laos   :lebanon: lebanon :st_lucia: st_lucia   :liechtenstein: liechtenstein :sri_lanka: sri_lanka   :liberia: liberia :lesotho: lesotho   :lithuania: lithuania :luxembourg: luxembourg   :latvia: latvia :libya: libya   :morocco: morocco :monaco: monaco   :moldova: moldova :montenegro: montenegro   :madagascar: madagascar :marshall_islands: marshall_islands   :macedonia: macedonia :mali: mali   :myanmar: myanmar :mongolia: mongolia   :macau: macau :northern_mariana_islands: northern_mariana_islands   :martinique: martinique :mauritania: mauritania   :montserrat: montserrat :malta: malta   :mauritius: mauritius :maldives: maldives   :malawi: malawi :mexico: mexico   :malaysia: malaysia :mozambique: mozambique   :namibia: namibia :new_caledonia: new_caledonia   :niger: niger :norfolk_island: norfolk_island   :nigeria: nigeria :nicaragua: nicaragua   :netherlands: netherlands :norway: norway   :nepal: nepal :nauru: nauru   :niue: niue :new_zealand: new_zealand   :oman: oman :panama: panama   :peru: peru :french_polynesia: french_polynesia   :papua_new_guinea: papua_new_guinea :philippines: philippines   :pakistan: pakistan :poland: poland   :st_pierre_miquelon: st_pierre_miquelon :pitcairn_islands: pitcairn_islands   :puerto_rico: puerto_rico :palestinian_territories: palestinian_territories   :portugal: portugal :palau: palau   :paraguay: paraguay :qatar: qatar   :reunion: reunion :romania: romania   :serbia: serbia :ru: ru   :rwanda: rwanda :saudi_arabia: saudi_arabia   :solomon_islands: solomon_islands :seychelles: seychelles   :sudan: sudan :sweden: sweden   :singapore: singapore :st_helena: st_helena   :slovenia: slovenia :slovakia: slovakia   :sierra_leone: sierra_leone :san_marino: san_marino   :senegal: senegal :somalia: somalia   :suriname: suriname :south_sudan: south_sudan   :sao_tome_principe: sao_tome_principe :el_salvador: el_salvador   :sint_maarten: sint_maarten :syria: syria   :swaziland: swaziland :turks_caicos_islands: turks_caicos_islands   :chad: chad :french_southern_territories: french_southern_territories   :togo: togo :thailand: thailand   :tajikistan: tajikistan :tokelau: tokelau   :timor_leste: timor_leste :turkmenistan: turkmenistan   :tunisia: tunisia :tonga: tonga   :tr: tr :trinidad_tobago: trinidad_tobago   :tuvalu: tuvalu :taiwan: taiwan   :tanzania: tanzania :ukraine: ukraine   :uganda: uganda :us: us   :uruguay: uruguay :uzbekistan: uzbekistan   :vatican_city: vatican_city :st_vincent_grenadines: st_vincent_grenadines   :venezuela: venezuela :british_virgin_islands: british_virgin_islands   :us_virgin_islands: us_virgin_islands :vietnam: vietnam   :vanuatu: vanuatu :wallis_futuna: wallis_futuna   :samoa: samoa :kosovo: kosovo   :yemen: yemen :mayotte: mayotte   :south_africa: south_africa :zambia: zambia   :zimbabwe: zimbabwe     "
},
{
	"uri": "https://example.com/shortcodes/doublecode/",
	"title": "Doublecode",
	"tags": [],
	"description": "",
	"content": "The doublecode shortcode works the same as the code shortcode, but extends the functionality by also rendering the code in the page. This is useful for showing the code of HTML elements in your page.\nHi there\nI'm inside a doublecode shortcode, that's why I look so fancy.\n   Copy   \u0026lt;div class=\u0026#34;mydiv bg-primary shadow text-white p-3 m-4 border-primary\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;h4 title\u0026#34;\u0026gt;Hi there\u0026lt;/p\u0026gt; \u0026lt;p class=\u0026#34;lead mb-0\u0026#34;\u0026gt;I\u0026#39;m inside a doublecode shortcode, that\u0026#39;s why I look so fancy.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;    Usage Simply place the following shortcode on the page\nCode in the shortcode Copy   {{\u0026lt; doublecode lang=\u0026#34;LANG\u0026#34; \u0026gt;}} [your code] {{\u0026lt; /doublecode \u0026gt;}}    Code from a file Copy   {{\u0026lt; doublecode lang=\u0026#34;LANG\u0026#34; file=\u0026#34;code/mycode.html\u0026#34; \u0026gt;}}    Parameters lang The lang parameter defines the language to be used for code highlighting. You can find a complete list of supported languages here.\nExample: lang=\u0026quot;html\u0026quot;\nfile The file parameter allows you to define an external file that contains your code to be displayed. This is done by giving a path to that file, starting from the root directory of your site. For example, a HTML file named \u0026lsquo;mycode.html\u0026rsquo; you wish to link that is in the docs/code/ directory can be defined as follows: file=\u0026quot;code/mycode.html\u0026quot;.\n"
},
{
	"uri": "https://example.com/shortcodes/lead/",
	"title": "Lead",
	"tags": [],
	"description": "",
	"content": "The lead shortcode creates a paragraph with the lead class to make it stand out. Great for introductions or summaries.\nI\u0026rsquo;m a lead paragraph. That means I\u0026rsquo;m more important. And you can see that. Usage Simply place the following shortcode on the page Copy   {{\u0026lt; lead \u0026gt;}} [content] {{\u0026lt; /lead \u0026gt;}}    "
},
{
	"uri": "https://example.com/shortcodes/panel/",
	"title": "Panel",
	"tags": [],
	"description": "",
	"content": "Draw your visitor\u0026rsquo;s attention by separating information from the rest of the page using a panel. Convey meaning to this information by using colors implying danger, warning, success or info in a similar fashion as alerts.\nI\u0026#39;m important  Be sure to read me, I might have important information for you.    Usage Simply place the following shortcode on the page Copy   {{\u0026lt; panel title=\u0026#34;TITLE\u0026#34; style=\u0026#34;STYLE\u0026#34; \u0026gt;}} [content] {{\u0026lt; /panel \u0026gt;}}    Parameters Style The style parameter is directly applied to the alert as a class in the format \u0026ldquo;border-{STYLE}\u0026quot;. Bootstrap comes with a variety of styles that can be used with this:\n primary secondary danger warning success info Example: style=\u0026quot;danger\u0026quot;.  Title The title paramter defines the text shown as a title in the panel. It will have the same color as the style.\nExample: title=\u0026quot;I\u0026rsquo;m important\u0026quot;.\n"
},
{
	"uri": "https://example.com/posts/creating-a-new-theme/",
	"title": "Creating a New Theme",
	"tags": [],
	"description": "",
	"content": "Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can’t be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.\nThe Home Page The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “+++”, YAML by “---”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo’s choice of templates.\nSingle Template A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site Let\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n$ hugo new site ~/Sites/zafta $ cd ~/Sites/zafta $ ls -l total 8 drwxr-xr-x 7 quoha staff 238 Sep 29 16:49 . drwxr-xr-x 3 quoha staff 102 Sep 29 16:49 .. drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site Running the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n$ hugo --verbose INFO: 2014/09/29 Using config file: config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n$ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n$ ls -l public total 16 -rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml -rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml $ Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n$ hugo server --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\nindex.xml sitemap.xml That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet’s go back and look at those warnings again.\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.\nCreate a New Theme Hugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton Use the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n$ hugo new theme zafta $ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes $ find themes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html -rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml $ The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n$ vi themes/zafta/theme.toml author = \u0026quot;michael d henderson\u0026quot; description = \u0026quot;a minimal working template\u0026quot; license = \u0026quot;MIT\u0026quot; name = \u0026quot;zafta\u0026quot; source_repo = \u0026quot;\u0026quot; tags = [\u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot;] :wq ## also edit themes/zafta/LICENSE.md and change ## the bit that says \u0026quot;YOUR_NAME_HERE\u0026quot; Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n$ find themes/zafta -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html $ Update the Configuration File to Use the Theme Now that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n$ vi config.toml theme = \u0026quot;zafta\u0026quot; baseurl = \u0026quot;\u0026quot; languageCode = \u0026quot;en-us\u0026quot; title = \u0026quot;zafta - totally refreshing\u0026quot; MetaDataFormat = \u0026quot;toml\u0026quot; :wq $ Generate the Site Now that we have an empty theme, let\u0026rsquo;s generate the site again.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n$ ls -l public total 16 drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css -rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html -rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js -rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml $ Notice four things:\n Hugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically.  The Home Page Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n$ find . -name index.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html $ The Magic of Static Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n$ find themes/zafta -type d | xargs ls -ld drwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes drwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js $ The Theme Development Cycle When you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\n Purge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4.  I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory When generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option Hugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload Hugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands Use the following commands as the basis for your workflow.\n## purge old files. hugo will recreate the public directory. ## $ rm -rf public ## ## run hugo in watch mode ## $ hugo server --watch --verbose Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n$ rm -rf public $ hugo server --watch --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Watching for changes in /Users/quoha/Sites/zafta/content Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop INFO: 2014/09/29 File System Event: [\u0026quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026quot;: MODIFY|ATTRIB] Change detected, rebuilding site WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 1 ms Update the Home Page Template The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\n index.html _default/list.html _default/single.html  We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page Right now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and then verify the results.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/html\u0026gt; Live Reload Note: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page \u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts Now that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n$ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md ERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{} $ That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n$ vi themes/zafta/archetypes/post.md +++ Description = \u0026quot;\u0026quot; Tags = [] Categories = [] +++ :wq $ find themes/zafta/archetypes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md $ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md /Users/quoha/Sites/zafta/content/post/first.md created $ hugo --verbose new post/second.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/second.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md /Users/quoha/Sites/zafta/content/post/second.md created $ ls -l content/post total 16 -rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md -rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md $ cat content/post/first.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:54:53-05:00\u0026quot; title = \u0026quot;first\u0026quot; +++ my first post $ cat content/post/second.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:57:09-05:00\u0026quot; title = \u0026quot;second\u0026quot; +++ my second post $ Build the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;, \u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ The output says that it created 2 pages. Those are our new posts:\n$ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html $ The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates In Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage The home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026quot;. In our template, the commands are:\n range .Title end  The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts We\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n$ find themes/zafta -name single.html | xargs ls -l -rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File $ vi themes/zafta/layouts/_default/single.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html $ cat public/post/first/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ cat public/post/second/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content The posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/second/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/first/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Create a Post Listing We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n$ find themes/zafta -name list.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages Let\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n$ vi content/about.md +++ title = \u0026quot;about\u0026quot; description = \u0026quot;about this site\u0026quot; date = \u0026quot;2014-09-27\u0026quot; slug = \u0026quot;about time\u0026quot; +++ ## about us i'm speechless :wq Generate the web site and verify the results.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/'. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/theme/\u0026quot;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/about-time/\u0026quot;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/second-post/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/first-post/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if eq .Type \u0026quot;page\u0026quot; }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n$ vi config.toml [permalinks] page = \u0026quot;/:title/\u0026quot; about = \u0026quot;/:filename/\u0026quot; Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates If you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n$ vi themes/zafta/layouts/partials/header.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; :wq $ vi themes/zafta/layouts/partials/footer.html \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Update the Home Page Template to Use the Partials The most noticeable difference between a template call and a partials call is the lack of path:\n{{ template \u0026quot;theme/partials/header.html\u0026quot; . }} versus\n{{ partial \u0026quot;header.html\u0026quot; . }} Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n$ vi themes/zafta/layouts/index.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if or (eq .Type \u0026quot;page\u0026quot;) (eq .Type \u0026quot;about\u0026quot;) }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd “Date Published” to Posts It\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd “Date Published” to the Template We\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }} Posts use the default single template, so we\u0026rsquo;ll change that file.\n$ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n$ mkdir themes/zafta/layouts/post $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n$ vi themes/zafta/layouts/post/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n"
},
{
	"uri": "https://example.com/posts/migrate-from-jekyll/",
	"title": "Migrate to Hugo from Jekyll",
	"tags": [],
	"description": "",
	"content": "Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\n  Change your submodule to point to map gh-pages to public instead of _site (recommended).\n git submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public    Or, change the Hugo configuration to use _site instead of public.\n { .. \u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;, .. }    Convert Jekyll templates to Hugo templates That\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes Jekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll class ImageTag \u0026lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot; else source = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot; end if @link source += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot; if @link source += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption source += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot; source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag)  is written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt; \u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt; {{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }} \u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt; {{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }} {{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}} \u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }} {{ .Get \u0026quot;title\u0026quot; }}{{ end }} {{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt; {{ .Get \u0026quot;caption\u0026quot; }} {{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }} {{ .Get \u0026quot;attr\u0026quot; }} {{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/p\u0026gt; {{ end }} \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; \u0026lt;!-- image --\u0026gt;  Usage I simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}  to this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}}  As a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches Fix content Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up You\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff Hey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n"
},
{
	"uri": "https://example.com/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "  Java   Series of Java language related articles that cover Java 8, Java 11, and Java 14. Read more....      Spring  A clean look to keep your user's attention to the content that matters: your documentation.      Spring Boot  Hugo does not require Java, Python or Ruby and is available as a simple binary or through NPM and other package managers.      Go Lang  Folders and files are automatically added in the menu depending on your file and folder structure.      Application Migrations  Easily find the content you look for through the search function.      Code Reviews  Code highlighting. Include code samples with a copy button. If it’s HTML, you can also render the code.      DevOps  Code, buttons, alerts, leads, collapse, panels, images, videos and more.      Built with Bootstrap.  Built with Bootstrap 4. Fully responsive out of the box. Build and style page elements using Bootstrap.      Icons.  Packed with Font Awesome. Empower your content with a shit ton of awesome icons.   --  "
},
{
	"uri": "https://example.com/tags/css/",
	"title": "css",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/html/",
	"title": "html",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/golang/1.-markdown-syntax/",
	"title": "Java 8 new Features",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/tags/markdown/",
	"title": "markdown",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/themes/",
	"title": "themes",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/code-review/",
	"title": "Code-reviews",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/code-review/1.-spring-boot-new-features/",
	"title": "Migrate Apps from Java8 to Java 14",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/app-migration/",
	"title": "App-migrations",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/java/",
	"title": "Java",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/java-11/",
	"title": "Java 11",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/categories/java-11/",
	"title": "Java 11",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/java/java11/1.-markdown-syntax/",
	"title": "Java 11 new Features",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/java/java14/1.-markdown-syntax/",
	"title": "Java 11 new Features",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/categories/java-14/",
	"title": "Java 14",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/java-8/",
	"title": "Java 8",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/categories/java-8/",
	"title": "Java 8",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/java/1.-markdown-syntax/",
	"title": "Java 8 new Features",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/java/java-8/1.-markdown-syntax/",
	"title": "Java 8 new Features",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/tags/java-tutorial/",
	"title": "Java Tutorial",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/java/",
	"title": "Java Tutorials",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This is Java home page content. You can provide whatever content you want for the home page. This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/posts/1.-markdown-syntax/",
	"title": "Markdown Syntax Guide",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/app-migration/1.-java-8-to-11-migration/",
	"title": "Migrating Java 8 to Java 11",
	"tags": ["Java", "Migration", "Java 11", "Java 8"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/tags/migration/",
	"title": "Migration",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/posts/",
	"title": "Posts",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/java-tutorial/",
	"title": "Quick Start",
	"tags": ["Java Tutorial"],
	"description": "",
	"content": "Java has been a widely used language which has one of the largest\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring/spring-new-features/",
	"title": "Spring 5 New Features",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring-boot/1.-spring-boot-new-features-copy-2/",
	"title": "Spring Boot New Features 1",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring-boot/2.-spring-boot-new-features-copy-3/",
	"title": "Spring Boot New Features 2",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring-boot/3.-spring-boot-new-features-copy-4/",
	"title": "Spring Boot New Features 3",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring-boot/4.-spring-boot-new-features-copy/",
	"title": "Spring Boot New Features 4",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring-boot/5.-spring-boot-new-features/",
	"title": "Spring Boot New Features 5",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring-boot/",
	"title": "Spring Boot Series",
	"tags": ["markdown", "css", "html", "themes"],
	"description": "",
	"content": "This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  "
},
{
	"uri": "https://example.com/spring/",
	"title": "Springs",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/privacy/",
	"title": "privacy",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/posts/3.-rich-content/",
	"title": "Rich Content",
	"tags": ["shortcodes", "privacy"],
	"description": "",
	"content": "Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n Instagram Simple Shortcode .__h_instagram.card { font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; font-size: 14px; border: 1px solid rgb(219, 219, 219); padding: 0; margin-top: 30px; } .__h_instagram.card .card-header, .__h_instagram.card .card-body { padding: 10px 10px 10px; } .__h_instagram.card img { width: 100%; height: auto; }  koloot.design   View More on Instagram    YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  "
},
{
	"uri": "https://example.com/tags/shortcodes/",
	"title": "shortcodes",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/emoji/",
	"title": "emoji",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/posts/4.-emoji-support/",
	"title": "Emoji Support",
	"tags": ["emoji"],
	"description": "Guide to emoji usage in Hugo",
	"content": "Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }"
},
{
	"uri": "https://example.com/tags/katex/",
	"title": "Katex",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/math/",
	"title": "math",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/posts/5.-math-typesetting/",
	"title": "Math Typesetting",
	"tags": ["math", "markdown", "Katex"],
	"description": "A brief guide to setup KaTeX",
	"content": "Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026quot;math.html\u0026quot; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions Examples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n"
},
{
	"uri": "https://example.com/tags/chords/",
	"title": "chords",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/posts/6.-happy-birthday-chords/",
	"title": "Happy Birthday Chords",
	"tags": ["chords", "music"],
	"description": "Chords for Happy Birthday Song",
	"content": "Happy ABirthday Eto youHappy EBirthday Ato youHappy A7Birthday dear DJohnnyHappy ABirthday Eto Ayou "
},
{
	"uri": "https://example.com/tags/music/",
	"title": "music",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/emoji-extensions/",
	"title": "emoji-extensions",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/categories/markdown/",
	"title": "Markdown",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/posts/goisforlovers/",
	"title": "(HO)go Template Primer",
	"tags": ["go", "golang", "templates", "themes", "development"],
	"description": "",
	"content": "Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The Go docs provide more details.\nIntroduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.\nA unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.\nBasic Syntax Golang templates are HTML files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }}  Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}  Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }}  Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }}  Variables Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;  Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }}  Functions Go template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }}  Includes When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }}  Logic Go templates provide the most basic iteration and conditional logic.\nIteration Just like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }}  Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }}  Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }}  Conditionals If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\n false 0 any array, slice, map, or string of length zero  Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }}  Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}  Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }}  Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Pipes One of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }}  is the same as\n{{ eq 1 1 | if }} Same {{ end }}  It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }}  Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }}  Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }}  Context (aka. the dot) The most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n {{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }}  Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n--- title: \u0026quot;Permalinks\u0026quot; date: \u0026quot;2013-11-18\u0026quot; aliases: - \u0026quot;/doc/permalinks/\u0026quot; groups: [\u0026quot;extras\u0026quot;] groups_weight: 30 notoc: true --- Here is the corresponding code inside of the template:\n {{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }}  Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\nparams: CopyrightHTML: \u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34; TwitterUser: \u0026#34;spf13\u0026#34; SidebarRecentLimit: 5 Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; \u0026lt;div class=\u0026quot;text-center\u0026quot;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;{{end}} An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026quot;twitter\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;https://twitter.com/{{.}}\u0026quot; rel=\u0026quot;author\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;/images/twitter.png\u0026quot; width=\u0026quot;48\u0026quot; height=\u0026quot;48\u0026quot; title=\u0026quot;Twitter: {{.}}\u0026quot; alt=\u0026quot;Twitter\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;{{end}} Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n\u0026lt;nav class=\u0026quot;recent\u0026quot;\u0026gt; \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} \u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;{{.RelPermalink}}\u0026quot;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {{end}}\u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; "
},
{
	"uri": "https://example.com/categories/development/",
	"title": "Development",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/development/",
	"title": "development",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/posts/hugoisforlovers/",
	"title": "Getting Started with Hugo",
	"tags": ["go", "golang", "hugo", "development"],
	"description": "",
	"content": "Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at Install Hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Press ctrl+c to stop  Once you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site Stop the Hugo process by hitting Ctrl+C.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026gt; Press ctrl+c to stop  Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 26 ms  Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun The best way to learn something is to play with it.\n"
},
{
	"uri": "https://example.com/tags/go/",
	"title": "go",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/golang/",
	"title": "golang",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/categories/golang/",
	"title": "golang",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/hugo/",
	"title": "hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/tags/templates/",
	"title": "templates",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://example.com/java-tutorial/quick-start/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Java - A quick introduction Java is one of the widely used application development language across many domains. James Gosling created the language during the year 1995 and since then it has matured every release. There are thousands of developers who work on this programming language and have built their carrier. Even after two decades of development the language still has demand in the market and has attracted a lot of young developers.\n"
},
{
	"uri": "https://example.com/shortcodes/table/",
	"title": "Table",
	"tags": [],
	"description": "",
	"content": "The table shortcode allows you to wrap your tables in a table class, providing styling to the table such as borders, stripes and hover effects.\n   Tables are cool     col 3 is right-aligned $1600   col 2 is centered $12   zebra stripes are neat $1     Usage Place the following shortcode on the page Copy   {{\u0026lt; table style=\u0026#34;STYLE\u0026#34; \u0026gt;}} | Tables | are | cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | {{\u0026lt; /table \u0026gt;}}    Parameters Style The style parameter is directly applied to the table as a class in the format \u0026quot;{STYLE}\u0026quot;. Bootstrap comes with several styles that can be used with this:\n table-striped table-dark table-bordered table-hover  "
}]
